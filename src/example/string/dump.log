
./a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 3ff0 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 52 2f 00 00    	pushq  0x2f52(%rip)        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 53 2f 00 00 	bnd jmpq *0x2f53(%rip)        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop

Disassembly of section .plt.got:

00000000000010d0 <__cxa_finalize@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 fd 2e 00 00 	bnd jmpq *0x2efd(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010e0 <printf@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 9d 2e 00 00 	bnd jmpq *0x2e9d(%rip)        # 3f88 <printf@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <strlen@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 95 2e 00 00 	bnd jmpq *0x2e95(%rip)        # 3f90 <strlen@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__ubsan_handle_divrem_overflow@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 8d 2e 00 00 	bnd jmpq *0x2e8d(%rip)        # 3f98 <__ubsan_handle_divrem_overflow>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <random@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 85 2e 00 00 	bnd jmpq *0x2e85(%rip)        # 3fa0 <random@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__ubsan_handle_pointer_overflow@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 7d 2e 00 00 	bnd jmpq *0x2e7d(%rip)        # 3fa8 <__ubsan_handle_pointer_overflow>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <clock_gettime@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 75 2e 00 00 	bnd jmpq *0x2e75(%rip)        # 3fb0 <clock_gettime@GLIBC_2.17>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <__stack_chk_fail@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 6d 2e 00 00 	bnd jmpq *0x2e6d(%rip)        # 3fb8 <__stack_chk_fail@GLIBC_2.4>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <__ubsan_handle_out_of_bounds@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 65 2e 00 00 	bnd jmpq *0x2e65(%rip)        # 3fc0 <__ubsan_handle_out_of_bounds>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <__ubsan_handle_type_mismatch_v1@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 5d 2e 00 00 	bnd jmpq *0x2e5d(%rip)        # 3fc8 <__ubsan_handle_type_mismatch_v1>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__ubsan_handle_nonnull_arg@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 55 2e 00 00 	bnd jmpq *0x2e55(%rip)        # 3fd0 <__ubsan_handle_nonnull_arg>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001180 <_start>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	31 ed                	xor    %ebp,%ebp
    1186:	49 89 d1             	mov    %rdx,%r9
    1189:	5e                   	pop    %rsi
    118a:	48 89 e2             	mov    %rsp,%rdx
    118d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1191:	50                   	push   %rax
    1192:	54                   	push   %rsp
    1193:	4c 8d 05 06 0d 00 00 	lea    0xd06(%rip),%r8        # 1ea0 <__libc_csu_fini>
    119a:	48 8d 0d 8f 0c 00 00 	lea    0xc8f(%rip),%rcx        # 1e30 <__libc_csu_init>
    11a1:	48 8d 3d 38 0c 00 00 	lea    0xc38(%rip),%rdi        # 1de0 <main>
    11a8:	ff 15 3a 2e 00 00    	callq  *0x2e3a(%rip)        # 3fe8 <__libc_start_main@GLIBC_2.2.5>
    11ae:	f4                   	hlt    
    11af:	90                   	nop

00000000000011b0 <deregister_tm_clones>:
    11b0:	48 8d 3d 51 31 00 00 	lea    0x3151(%rip),%rdi        # 4308 <__TMC_END__>
    11b7:	48 8d 05 4a 31 00 00 	lea    0x314a(%rip),%rax        # 4308 <__TMC_END__>
    11be:	48 39 f8             	cmp    %rdi,%rax
    11c1:	74 15                	je     11d8 <deregister_tm_clones+0x28>
    11c3:	48 8b 05 16 2e 00 00 	mov    0x2e16(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable>
    11ca:	48 85 c0             	test   %rax,%rax
    11cd:	74 09                	je     11d8 <deregister_tm_clones+0x28>
    11cf:	ff e0                	jmpq   *%rax
    11d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <register_tm_clones>:
    11e0:	48 8d 3d 21 31 00 00 	lea    0x3121(%rip),%rdi        # 4308 <__TMC_END__>
    11e7:	48 8d 35 1a 31 00 00 	lea    0x311a(%rip),%rsi        # 4308 <__TMC_END__>
    11ee:	48 29 fe             	sub    %rdi,%rsi
    11f1:	48 89 f0             	mov    %rsi,%rax
    11f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11f8:	48 c1 f8 03          	sar    $0x3,%rax
    11fc:	48 01 c6             	add    %rax,%rsi
    11ff:	48 d1 fe             	sar    %rsi
    1202:	74 14                	je     1218 <register_tm_clones+0x38>
    1204:	48 8b 05 ed 2d 00 00 	mov    0x2ded(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable>
    120b:	48 85 c0             	test   %rax,%rax
    120e:	74 08                	je     1218 <register_tm_clones+0x38>
    1210:	ff e0                	jmpq   *%rax
    1212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <__do_global_dtors_aux>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	80 3d f5 30 00 00 00 	cmpb   $0x0,0x30f5(%rip)        # 4320 <completed.8060>
    122b:	75 2b                	jne    1258 <__do_global_dtors_aux+0x38>
    122d:	55                   	push   %rbp
    122e:	48 83 3d a2 2d 00 00 	cmpq   $0x0,0x2da2(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1235:	00 
    1236:	48 89 e5             	mov    %rsp,%rbp
    1239:	74 0c                	je     1247 <__do_global_dtors_aux+0x27>
    123b:	48 8b 3d c6 2d 00 00 	mov    0x2dc6(%rip),%rdi        # 4008 <__dso_handle>
    1242:	e8 89 fe ff ff       	callq  10d0 <__cxa_finalize@plt>
    1247:	e8 64 ff ff ff       	callq  11b0 <deregister_tm_clones>
    124c:	c6 05 cd 30 00 00 01 	movb   $0x1,0x30cd(%rip)        # 4320 <completed.8060>
    1253:	5d                   	pop    %rbp
    1254:	c3                   	retq   
    1255:	0f 1f 00             	nopl   (%rax)
    1258:	c3                   	retq   
    1259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001260 <frame_dummy>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	e9 77 ff ff ff       	jmpq   11e0 <register_tm_clones>
    1269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001270 <init>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	55                   	push   %rbp
    1275:	48 89 e5             	mov    %rsp,%rbp
    1278:	41 55                	push   %r13
    127a:	41 54                	push   %r12
    127c:	53                   	push   %rbx
    127d:	48 83 ec 18          	sub    $0x18,%rsp
    1281:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1288:	e9 d9 02 00 00       	jmpq   1566 <init+0x2f6>
    128d:	e8 7e fe ff ff       	callq  1110 <random@plt>
    1292:	83 e0 3f             	and    $0x3f,%eax
    1295:	89 45 dc             	mov    %eax,-0x24(%rbp)
    1298:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    129f:	e9 72 01 00 00       	jmpq   1416 <init+0x1a6>
    12a4:	e8 67 fe ff ff       	callq  1110 <random@plt>
    12a9:	48 89 c1             	mov    %rax,%rcx
    12ac:	48 ba c5 4e ec c4 4e 	movabs $0x4ec4ec4ec4ec4ec5,%rdx
    12b3:	ec c4 4e 
    12b6:	48 89 c8             	mov    %rcx,%rax
    12b9:	48 f7 e2             	mul    %rdx
    12bc:	48 c1 ea 03          	shr    $0x3,%rdx
    12c0:	48 89 d0             	mov    %rdx,%rax
    12c3:	48 01 c0             	add    %rax,%rax
    12c6:	48 01 d0             	add    %rdx,%rax
    12c9:	48 c1 e0 02          	shl    $0x2,%rax
    12cd:	48 01 d0             	add    %rdx,%rax
    12d0:	48 01 c0             	add    %rax,%rax
    12d3:	48 29 c1             	sub    %rax,%rcx
    12d6:	48 89 ca             	mov    %rcx,%rdx
    12d9:	4c 8d 6a 61          	lea    0x61(%rdx),%r13
    12dd:	8b 5d d4             	mov    -0x2c(%rbp),%ebx
    12e0:	48 63 c3             	movslq %ebx,%rax
    12e3:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    12e9:	76 12                	jbe    12fd <init+0x8d>
    12eb:	48 63 c3             	movslq %ebx,%rax
    12ee:	48 89 c6             	mov    %rax,%rsi
    12f1:	48 8d 3d 88 2d 00 00 	lea    0x2d88(%rip),%rdi        # 4080 <__dso_handle+0x78>
    12f8:	e8 53 fe ff ff       	callq  1150 <__ubsan_handle_out_of_bounds@plt>
    12fd:	44 8b 65 d8          	mov    -0x28(%rbp),%r12d
    1301:	49 63 c4             	movslq %r12d,%rax
    1304:	48 3d 7f 00 01 00    	cmp    $0x1007f,%rax
    130a:	76 12                	jbe    131e <init+0xae>
    130c:	49 63 c4             	movslq %r12d,%rax
    130f:	48 89 c6             	mov    %rax,%rsi
    1312:	48 8d 3d 87 2d 00 00 	lea    0x2d87(%rip),%rdi        # 40a0 <__dso_handle+0x98>
    1319:	e8 32 fe ff ff       	callq  1150 <__ubsan_handle_out_of_bounds@plt>
    131e:	49 63 cc             	movslq %r12d,%rcx
    1321:	48 63 d3             	movslq %ebx,%rdx
    1324:	48 89 d0             	mov    %rdx,%rax
    1327:	48 c1 e0 09          	shl    $0x9,%rax
    132b:	48 01 d0             	add    %rdx,%rax
    132e:	48 c1 e0 07          	shl    $0x7,%rax
    1332:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    1336:	48 8d 05 03 30 00 00 	lea    0x3003(%rip),%rax        # 4340 <experimentalstr>
    133d:	48 01 d0             	add    %rdx,%rax
    1340:	48 89 c2             	mov    %rax,%rdx
    1343:	48 8d 05 f6 2f 00 00 	lea    0x2ff6(%rip),%rax        # 4340 <experimentalstr>
    134a:	b9 01 00 00 00       	mov    $0x1,%ecx
    134f:	48 29 c1             	sub    %rax,%rcx
    1352:	48 89 c8             	mov    %rcx,%rax
    1355:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    1359:	49 63 f4             	movslq %r12d,%rsi
    135c:	48 63 d3             	movslq %ebx,%rdx
    135f:	48 89 d0             	mov    %rdx,%rax
    1362:	48 c1 e0 09          	shl    $0x9,%rax
    1366:	48 01 d0             	add    %rdx,%rax
    1369:	48 c1 e0 07          	shl    $0x7,%rax
    136d:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    1371:	48 8d 05 c8 2f 00 00 	lea    0x2fc8(%rip),%rax        # 4340 <experimentalstr>
    1378:	48 01 d0             	add    %rdx,%rax
    137b:	48 81 f9 00 00 02 04 	cmp    $0x4020000,%rcx
    1382:	76 1a                	jbe    139e <init+0x12e>
    1384:	48 89 c2             	mov    %rax,%rdx
    1387:	48 01 d1             	add    %rdx,%rcx
    138a:	48 39 ca             	cmp    %rcx,%rdx
    138d:	77 0f                	ja     139e <init+0x12e>
    138f:	48 89 c6             	mov    %rax,%rsi
    1392:	48 8d 3d 27 2d 00 00 	lea    0x2d27(%rip),%rdi        # 40c0 <__dso_handle+0xb8>
    1399:	e8 c2 fd ff ff       	callq  1160 <__ubsan_handle_type_mismatch_v1@plt>
    139e:	49 63 cc             	movslq %r12d,%rcx
    13a1:	48 63 d3             	movslq %ebx,%rdx
    13a4:	48 89 d0             	mov    %rdx,%rax
    13a7:	48 c1 e0 09          	shl    $0x9,%rax
    13ab:	48 01 d0             	add    %rdx,%rax
    13ae:	48 c1 e0 07          	shl    $0x7,%rax
    13b2:	48 01 c1             	add    %rax,%rcx
    13b5:	48 8d 15 84 2f 00 00 	lea    0x2f84(%rip),%rdx        # 4340 <experimentalstr>
    13bc:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    13c0:	48 f7 d1             	not    %rcx
    13c3:	48 c1 e9 3f          	shr    $0x3f,%rcx
    13c7:	84 c9                	test   %cl,%cl
    13c9:	74 1d                	je     13e8 <init+0x178>
    13cb:	48 39 d0             	cmp    %rdx,%rax
    13ce:	73 1d                	jae    13ed <init+0x17d>
    13d0:	48 89 c2             	mov    %rax,%rdx
    13d3:	48 8d 35 66 2f 00 00 	lea    0x2f66(%rip),%rsi        # 4340 <experimentalstr>
    13da:	48 8d 3d ff 2c 00 00 	lea    0x2cff(%rip),%rdi        # 40e0 <__dso_handle+0xd8>
    13e1:	e8 3a fd ff ff       	callq  1120 <__ubsan_handle_pointer_overflow@plt>
    13e6:	eb 05                	jmp    13ed <init+0x17d>
    13e8:	48 39 d0             	cmp    %rdx,%rax
    13eb:	77 e3                	ja     13d0 <init+0x160>
    13ed:	49 63 cc             	movslq %r12d,%rcx
    13f0:	48 63 d3             	movslq %ebx,%rdx
    13f3:	48 89 d0             	mov    %rdx,%rax
    13f6:	48 c1 e0 09          	shl    $0x9,%rax
    13fa:	48 01 d0             	add    %rdx,%rax
    13fd:	48 c1 e0 07          	shl    $0x7,%rax
    1401:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
    1405:	48 8d 05 34 2f 00 00 	lea    0x2f34(%rip),%rax        # 4340 <experimentalstr>
    140c:	48 01 d0             	add    %rdx,%rax
    140f:	44 88 28             	mov    %r13b,(%rax)
    1412:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    1416:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1419:	05 00 00 01 00       	add    $0x10000,%eax
    141e:	39 45 d8             	cmp    %eax,-0x28(%rbp)
    1421:	0f 8c 7d fe ff ff    	jl     12a4 <init+0x34>
    1427:	8b 5d d4             	mov    -0x2c(%rbp),%ebx
    142a:	48 63 c3             	movslq %ebx,%rax
    142d:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    1433:	76 12                	jbe    1447 <init+0x1d7>
    1435:	48 63 c3             	movslq %ebx,%rax
    1438:	48 89 c6             	mov    %rax,%rsi
    143b:	48 8d 3d be 2c 00 00 	lea    0x2cbe(%rip),%rdi        # 4100 <__dso_handle+0xf8>
    1442:	e8 09 fd ff ff       	callq  1150 <__ubsan_handle_out_of_bounds@plt>
    1447:	8b 45 dc             	mov    -0x24(%rbp),%eax
    144a:	44 8d a0 00 00 01 00 	lea    0x10000(%rax),%r12d
    1451:	49 63 c4             	movslq %r12d,%rax
    1454:	48 3d 7f 00 01 00    	cmp    $0x1007f,%rax
    145a:	76 12                	jbe    146e <init+0x1fe>
    145c:	49 63 c4             	movslq %r12d,%rax
    145f:	48 89 c6             	mov    %rax,%rsi
    1462:	48 8d 3d b7 2c 00 00 	lea    0x2cb7(%rip),%rdi        # 4120 <__dso_handle+0x118>
    1469:	e8 e2 fc ff ff       	callq  1150 <__ubsan_handle_out_of_bounds@plt>
    146e:	49 63 cc             	movslq %r12d,%rcx
    1471:	48 63 d3             	movslq %ebx,%rdx
    1474:	48 89 d0             	mov    %rdx,%rax
    1477:	48 c1 e0 09          	shl    $0x9,%rax
    147b:	48 01 d0             	add    %rdx,%rax
    147e:	48 c1 e0 07          	shl    $0x7,%rax
    1482:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    1486:	48 8d 05 b3 2e 00 00 	lea    0x2eb3(%rip),%rax        # 4340 <experimentalstr>
    148d:	48 01 d0             	add    %rdx,%rax
    1490:	48 89 c2             	mov    %rax,%rdx
    1493:	48 8d 05 a6 2e 00 00 	lea    0x2ea6(%rip),%rax        # 4340 <experimentalstr>
    149a:	b9 01 00 00 00       	mov    $0x1,%ecx
    149f:	48 29 c1             	sub    %rax,%rcx
    14a2:	48 89 c8             	mov    %rcx,%rax
    14a5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    14a9:	49 63 f4             	movslq %r12d,%rsi
    14ac:	48 63 d3             	movslq %ebx,%rdx
    14af:	48 89 d0             	mov    %rdx,%rax
    14b2:	48 c1 e0 09          	shl    $0x9,%rax
    14b6:	48 01 d0             	add    %rdx,%rax
    14b9:	48 c1 e0 07          	shl    $0x7,%rax
    14bd:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    14c1:	48 8d 05 78 2e 00 00 	lea    0x2e78(%rip),%rax        # 4340 <experimentalstr>
    14c8:	48 01 d0             	add    %rdx,%rax
    14cb:	48 81 f9 00 00 02 04 	cmp    $0x4020000,%rcx
    14d2:	76 1a                	jbe    14ee <init+0x27e>
    14d4:	48 89 c2             	mov    %rax,%rdx
    14d7:	48 01 d1             	add    %rdx,%rcx
    14da:	48 39 ca             	cmp    %rcx,%rdx
    14dd:	77 0f                	ja     14ee <init+0x27e>
    14df:	48 89 c6             	mov    %rax,%rsi
    14e2:	48 8d 3d 57 2c 00 00 	lea    0x2c57(%rip),%rdi        # 4140 <__dso_handle+0x138>
    14e9:	e8 72 fc ff ff       	callq  1160 <__ubsan_handle_type_mismatch_v1@plt>
    14ee:	49 63 cc             	movslq %r12d,%rcx
    14f1:	48 63 d3             	movslq %ebx,%rdx
    14f4:	48 89 d0             	mov    %rdx,%rax
    14f7:	48 c1 e0 09          	shl    $0x9,%rax
    14fb:	48 01 d0             	add    %rdx,%rax
    14fe:	48 c1 e0 07          	shl    $0x7,%rax
    1502:	48 01 c1             	add    %rax,%rcx
    1505:	48 8d 15 34 2e 00 00 	lea    0x2e34(%rip),%rdx        # 4340 <experimentalstr>
    150c:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    1510:	48 f7 d1             	not    %rcx
    1513:	48 c1 e9 3f          	shr    $0x3f,%rcx
    1517:	84 c9                	test   %cl,%cl
    1519:	74 1d                	je     1538 <init+0x2c8>
    151b:	48 39 d0             	cmp    %rdx,%rax
    151e:	73 1d                	jae    153d <init+0x2cd>
    1520:	48 89 c2             	mov    %rax,%rdx
    1523:	48 8d 35 16 2e 00 00 	lea    0x2e16(%rip),%rsi        # 4340 <experimentalstr>
    152a:	48 8d 3d 2f 2c 00 00 	lea    0x2c2f(%rip),%rdi        # 4160 <__dso_handle+0x158>
    1531:	e8 ea fb ff ff       	callq  1120 <__ubsan_handle_pointer_overflow@plt>
    1536:	eb 05                	jmp    153d <init+0x2cd>
    1538:	48 39 d0             	cmp    %rdx,%rax
    153b:	77 e3                	ja     1520 <init+0x2b0>
    153d:	49 63 cc             	movslq %r12d,%rcx
    1540:	48 63 d3             	movslq %ebx,%rdx
    1543:	48 89 d0             	mov    %rdx,%rax
    1546:	48 c1 e0 09          	shl    $0x9,%rax
    154a:	48 01 d0             	add    %rdx,%rax
    154d:	48 c1 e0 07          	shl    $0x7,%rax
    1551:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
    1555:	48 8d 05 e4 2d 00 00 	lea    0x2de4(%rip),%rax        # 4340 <experimentalstr>
    155c:	48 01 d0             	add    %rdx,%rax
    155f:	c6 00 00             	movb   $0x0,(%rax)
    1562:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    1566:	b8 00 04 00 00       	mov    $0x400,%eax
    156b:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    156e:	0f 8c 19 fd ff ff    	jl     128d <init+0x1d>
    1574:	90                   	nop
    1575:	90                   	nop
    1576:	48 83 c4 18          	add    $0x18,%rsp
    157a:	5b                   	pop    %rbx
    157b:	41 5c                	pop    %r12
    157d:	41 5d                	pop    %r13
    157f:	5d                   	pop    %rbp
    1580:	c3                   	retq   
    1581:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1588:	00 00 00 00 
    158c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001590 <experiment_optimize_0>:
    1590:	f3 0f 1e fa          	endbr64 
    1594:	55                   	push   %rbp
    1595:	48 89 e5             	mov    %rsp,%rbp
    1598:	53                   	push   %rbx
    1599:	48 83 ec 78          	sub    $0x78,%rsp
    159d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    15a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    15a8:	00 00 
    15aa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    15ae:	31 c0                	xor    %eax,%eax
    15b0:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    15b7:	00 
    15b8:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    15bf:	00 
    15c0:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    15c7:	00 
    15c8:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    15cf:	00 
    15d0:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    15d7:	00 
    15d8:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    15df:	00 
    15e0:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    15e7:	00 
    15e8:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    15ef:	00 
    15f0:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
    15f7:	e9 93 01 00 00       	jmpq   178f <experiment_optimize_0+0x1ff>
    15fc:	e8 0f fb ff ff       	callq  1110 <random@plt>
    1601:	48 89 c3             	mov    %rax,%rbx
    1604:	b8 00 04 00 00       	mov    $0x400,%eax
    1609:	85 c0                	test   %eax,%eax
    160b:	75 19                	jne    1626 <experiment_optimize_0+0x96>
    160d:	b8 00 04 00 00       	mov    $0x400,%eax
    1612:	48 98                	cltq   
    1614:	48 89 c2             	mov    %rax,%rdx
    1617:	48 89 de             	mov    %rbx,%rsi
    161a:	48 8d 3d 4f 2b 00 00 	lea    0x2b4f(%rip),%rdi        # 4170 <__dso_handle+0x168>
    1621:	e8 da fa ff ff       	callq  1100 <__ubsan_handle_divrem_overflow@plt>
    1626:	b8 00 04 00 00       	mov    $0x400,%eax
    162b:	48 63 c8             	movslq %eax,%rcx
    162e:	48 89 d8             	mov    %rbx,%rax
    1631:	ba 00 00 00 00       	mov    $0x0,%edx
    1636:	48 f7 f1             	div    %rcx
    1639:	48 89 d0             	mov    %rdx,%rax
    163c:	89 45 94             	mov    %eax,-0x6c(%rbp)
    163f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    1643:	48 89 c6             	mov    %rax,%rsi
    1646:	bf 00 00 00 00       	mov    $0x0,%edi
    164b:	e8 e0 fa ff ff       	callq  1130 <clock_gettime@plt>
    1650:	8b 5d 94             	mov    -0x6c(%rbp),%ebx
    1653:	48 63 c3             	movslq %ebx,%rax
    1656:	48 3d 00 04 00 00    	cmp    $0x400,%rax
    165c:	76 12                	jbe    1670 <experiment_optimize_0+0xe0>
    165e:	48 63 c3             	movslq %ebx,%rax
    1661:	48 89 c6             	mov    %rax,%rsi
    1664:	48 8d 3d 75 2b 00 00 	lea    0x2b75(%rip),%rdi        # 41e0 <__dso_handle+0x1d8>
    166b:	e8 e0 fa ff ff       	callq  1150 <__ubsan_handle_out_of_bounds@plt>
    1670:	48 63 d3             	movslq %ebx,%rdx
    1673:	48 89 d0             	mov    %rdx,%rax
    1676:	48 c1 e0 09          	shl    $0x9,%rax
    167a:	48 01 d0             	add    %rdx,%rax
    167d:	48 c1 e0 07          	shl    $0x7,%rax
    1681:	48 89 c1             	mov    %rax,%rcx
    1684:	48 8d 15 b5 2c 00 00 	lea    0x2cb5(%rip),%rdx        # 4340 <experimentalstr>
    168b:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    168f:	48 f7 d1             	not    %rcx
    1692:	48 c1 e9 3f          	shr    $0x3f,%rcx
    1696:	84 c9                	test   %cl,%cl
    1698:	74 1d                	je     16b7 <experiment_optimize_0+0x127>
    169a:	48 39 d0             	cmp    %rdx,%rax
    169d:	73 1d                	jae    16bc <experiment_optimize_0+0x12c>
    169f:	48 89 c2             	mov    %rax,%rdx
    16a2:	48 8d 35 97 2c 00 00 	lea    0x2c97(%rip),%rsi        # 4340 <experimentalstr>
    16a9:	48 8d 3d 50 2b 00 00 	lea    0x2b50(%rip),%rdi        # 4200 <__dso_handle+0x1f8>
    16b0:	e8 6b fa ff ff       	callq  1120 <__ubsan_handle_pointer_overflow@plt>
    16b5:	eb 05                	jmp    16bc <experiment_optimize_0+0x12c>
    16b7:	48 39 d0             	cmp    %rdx,%rax
    16ba:	77 e3                	ja     169f <experiment_optimize_0+0x10f>
    16bc:	48 63 d3             	movslq %ebx,%rdx
    16bf:	48 89 d0             	mov    %rdx,%rax
    16c2:	48 c1 e0 09          	shl    $0x9,%rax
    16c6:	48 01 d0             	add    %rdx,%rax
    16c9:	48 c1 e0 07          	shl    $0x7,%rax
    16cd:	48 8d 15 6c 2c 00 00 	lea    0x2c6c(%rip),%rdx        # 4340 <experimentalstr>
    16d4:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
    16d8:	48 85 db             	test   %rbx,%rbx
    16db:	75 0c                	jne    16e9 <experiment_optimize_0+0x159>
    16dd:	48 8d 3d fc 2b 00 00 	lea    0x2bfc(%rip),%rdi        # 42e0 <__dso_handle+0x2d8>
    16e4:	e8 87 fa ff ff       	callq  1170 <__ubsan_handle_nonnull_arg@plt>
    16e9:	48 89 df             	mov    %rbx,%rdi
    16ec:	e8 ff f9 ff ff       	callq  10f0 <strlen@plt>
    16f1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    16f5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    16f9:	48 89 c6             	mov    %rax,%rsi
    16fc:	bf 00 00 00 00       	mov    $0x0,%edi
    1701:	e8 2a fa ff ff       	callq  1130 <clock_gettime@plt>
    1706:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    170a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    170e:	48 29 c2             	sub    %rax,%rdx
    1711:	48 89 d0             	mov    %rdx,%rax
    1714:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1718:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    171c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1720:	48 29 c2             	sub    %rax,%rdx
    1723:	48 89 d0             	mov    %rdx,%rax
    1726:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    172a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    172e:	48 85 c0             	test   %rax,%rax
    1731:	79 1a                	jns    174d <experiment_optimize_0+0x1bd>
    1733:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1737:	48 83 e8 01          	sub    $0x1,%rax
    173b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    173f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1743:	48 05 00 ca 9a 3b    	add    $0x3b9aca00,%rax
    1749:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    174d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1751:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    1755:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1759:	48 89 c6             	mov    %rax,%rsi
    175c:	48 8d 3d b2 08 00 00 	lea    0x8b2(%rip),%rdi        # 2015 <experimentalstrcnt+0xd>
    1763:	b8 00 00 00 00       	mov    $0x0,%eax
    1768:	e8 73 f9 ff ff       	callq  10e0 <printf@plt>
    176d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1771:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1775:	48 01 d0             	add    %rdx,%rax
    1778:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    177c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1780:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1784:	48 01 d0             	add    %rdx,%rax
    1787:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    178b:	83 45 90 01          	addl   $0x1,-0x70(%rbp)
    178f:	b8 00 00 01 00       	mov    $0x10000,%eax
    1794:	39 45 90             	cmp    %eax,-0x70(%rbp)
    1797:	0f 8c 5f fe ff ff    	jl     15fc <experiment_optimize_0+0x6c>
    179d:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    17a1:	b8 00 00 01 00       	mov    $0x10000,%eax
    17a6:	85 c0                	test   %eax,%eax
    17a8:	0f 94 c1             	sete   %cl
    17ab:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    17b2:	00 00 80 
    17b5:	48 39 c3             	cmp    %rax,%rbx
    17b8:	0f 94 c2             	sete   %dl
    17bb:	b8 00 00 01 00       	mov    $0x10000,%eax
    17c0:	83 f8 ff             	cmp    $0xffffffff,%eax
    17c3:	0f 94 c0             	sete   %al
    17c6:	21 d0                	and    %edx,%eax
    17c8:	09 c8                	or     %ecx,%eax
    17ca:	84 c0                	test   %al,%al
    17cc:	74 1c                	je     17ea <experiment_optimize_0+0x25a>
    17ce:	b8 00 00 01 00       	mov    $0x10000,%eax
    17d3:	48 98                	cltq   
    17d5:	48 89 d9             	mov    %rbx,%rcx
    17d8:	48 89 c2             	mov    %rax,%rdx
    17db:	48 89 ce             	mov    %rcx,%rsi
    17de:	48 8d 3d ab 29 00 00 	lea    0x29ab(%rip),%rdi        # 4190 <__dso_handle+0x188>
    17e5:	e8 16 f9 ff ff       	callq  1100 <__ubsan_handle_divrem_overflow@plt>
    17ea:	b8 00 00 01 00       	mov    $0x10000,%eax
    17ef:	48 63 f0             	movslq %eax,%rsi
    17f2:	48 89 d8             	mov    %rbx,%rax
    17f5:	48 99                	cqto   
    17f7:	48 f7 fe             	idiv   %rsi
    17fa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    17fe:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    1802:	b8 00 00 01 00       	mov    $0x10000,%eax
    1807:	85 c0                	test   %eax,%eax
    1809:	0f 94 c1             	sete   %cl
    180c:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    1813:	00 00 80 
    1816:	48 39 c3             	cmp    %rax,%rbx
    1819:	0f 94 c2             	sete   %dl
    181c:	b8 00 00 01 00       	mov    $0x10000,%eax
    1821:	83 f8 ff             	cmp    $0xffffffff,%eax
    1824:	0f 94 c0             	sete   %al
    1827:	21 d0                	and    %edx,%eax
    1829:	09 c8                	or     %ecx,%eax
    182b:	84 c0                	test   %al,%al
    182d:	74 1c                	je     184b <experiment_optimize_0+0x2bb>
    182f:	b8 00 00 01 00       	mov    $0x10000,%eax
    1834:	48 98                	cltq   
    1836:	48 89 d9             	mov    %rbx,%rcx
    1839:	48 89 c2             	mov    %rax,%rdx
    183c:	48 89 ce             	mov    %rcx,%rsi
    183f:	48 8d 3d 6a 29 00 00 	lea    0x296a(%rip),%rdi        # 41b0 <__dso_handle+0x1a8>
    1846:	e8 b5 f8 ff ff       	callq  1100 <__ubsan_handle_divrem_overflow@plt>
    184b:	b8 00 00 01 00       	mov    $0x10000,%eax
    1850:	48 63 f0             	movslq %eax,%rsi
    1853:	48 89 d8             	mov    %rbx,%rax
    1856:	48 99                	cqto   
    1858:	48 f7 fe             	idiv   %rsi
    185b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    185f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    1863:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1867:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    186b:	48 89 c6             	mov    %rax,%rsi
    186e:	48 8d 3d af 07 00 00 	lea    0x7af(%rip),%rdi        # 2024 <experimentalstrcnt+0x1c>
    1875:	b8 00 00 00 00       	mov    $0x0,%eax
    187a:	e8 61 f8 ff ff       	callq  10e0 <printf@plt>
    187f:	90                   	nop
    1880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1884:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    188b:	00 00 
    188d:	74 05                	je     1894 <experiment_optimize_0+0x304>
    188f:	e8 ac f8 ff ff       	callq  1140 <__stack_chk_fail@plt>
    1894:	48 83 c4 78          	add    $0x78,%rsp
    1898:	5b                   	pop    %rbx
    1899:	5d                   	pop    %rbp
    189a:	c3                   	retq   
    189b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000018a0 <experiment_optimize_1>:
    18a0:	f3 0f 1e fa          	endbr64 
    18a4:	41 57                	push   %r15
    18a6:	41 56                	push   %r14
    18a8:	41 55                	push   %r13
    18aa:	41 54                	push   %r12
    18ac:	53                   	push   %rbx
    18ad:	48 83 ec 50          	sub    $0x50,%rsp
    18b1:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    18b6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    18bd:	00 00 
    18bf:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    18c4:	31 c0                	xor    %eax,%eax
    18c6:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    18cd:	00 00 
    18cf:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    18d6:	00 00 
    18d8:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    18df:	00 00 
    18e1:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    18e8:	00 00 
    18ea:	c7 44 24 14 00 00 01 	movl   $0x10000,0x14(%rsp)
    18f1:	00 
    18f2:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    18f8:	41 be 00 00 00 00    	mov    $0x0,%r14d
    18fe:	4c 8d 2d 3b 2a 00 00 	lea    0x2a3b(%rip),%r13        # 4340 <experimentalstr>
    1905:	eb 51                	jmp    1958 <experiment_optimize_1+0xb8>
    1907:	4c 89 ee             	mov    %r13,%rsi
    190a:	48 8d 3d 2f 29 00 00 	lea    0x292f(%rip),%rdi        # 4240 <__dso_handle+0x238>
    1911:	e8 0a f8 ff ff       	callq  1120 <__ubsan_handle_pointer_overflow@plt>
    1916:	eb 79                	jmp    1991 <experiment_optimize_1+0xf1>
    1918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    191f:	00 
    1920:	49 83 ec 01          	sub    $0x1,%r12
    1924:	48 81 c3 00 ca 9a 3b 	add    $0x3b9aca00,%rbx
    192b:	48 89 d9             	mov    %rbx,%rcx
    192e:	4c 89 e2             	mov    %r12,%rdx
    1931:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    1936:	48 8d 3d d8 06 00 00 	lea    0x6d8(%rip),%rdi        # 2015 <experimentalstrcnt+0xd>
    193d:	b8 00 00 00 00       	mov    $0x0,%eax
    1942:	e8 99 f7 ff ff       	callq  10e0 <printf@plt>
    1947:	4d 01 e6             	add    %r12,%r14
    194a:	49 01 df             	add    %rbx,%r15
    194d:	83 6c 24 14 01       	subl   $0x1,0x14(%rsp)
    1952:	0f 84 86 00 00 00    	je     19de <experiment_optimize_1+0x13e>
    1958:	e8 b3 f7 ff ff       	callq  1110 <random@plt>
    195d:	89 c3                	mov    %eax,%ebx
    195f:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx
    1965:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    196a:	bf 00 00 00 00       	mov    $0x0,%edi
    196f:	e8 bc f7 ff ff       	callq  1130 <clock_gettime@plt>
    1974:	48 63 db             	movslq %ebx,%rbx
    1977:	48 89 d8             	mov    %rbx,%rax
    197a:	48 c1 e0 09          	shl    $0x9,%rax
    197e:	48 01 c3             	add    %rax,%rbx
    1981:	48 c1 e3 07          	shl    $0x7,%rbx
    1985:	4c 89 ea             	mov    %r13,%rdx
    1988:	48 01 da             	add    %rbx,%rdx
    198b:	0f 82 76 ff ff ff    	jb     1907 <experiment_optimize_1+0x67>
    1991:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
    1996:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    199d:	b8 00 00 00 00       	mov    $0x0,%eax
    19a2:	f2 ae                	repnz scas %es:(%rdi),%al
    19a4:	48 f7 d1             	not    %rcx
    19a7:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
    19ab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    19b0:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    19b5:	bf 00 00 00 00       	mov    $0x0,%edi
    19ba:	e8 71 f7 ff ff       	callq  1130 <clock_gettime@plt>
    19bf:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    19c4:	4c 2b 64 24 20       	sub    0x20(%rsp),%r12
    19c9:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    19ce:	48 2b 5c 24 28       	sub    0x28(%rsp),%rbx
    19d3:	0f 89 52 ff ff ff    	jns    192b <experiment_optimize_1+0x8b>
    19d9:	e9 42 ff ff ff       	jmpq   1920 <experiment_optimize_1+0x80>
    19de:	49 8d 8f ff ff 00 00 	lea    0xffff(%r15),%rcx
    19e5:	4d 85 ff             	test   %r15,%r15
    19e8:	49 0f 49 cf          	cmovns %r15,%rcx
    19ec:	48 c1 f9 10          	sar    $0x10,%rcx
    19f0:	49 8d 96 ff ff 00 00 	lea    0xffff(%r14),%rdx
    19f7:	4d 85 f6             	test   %r14,%r14
    19fa:	49 0f 49 d6          	cmovns %r14,%rdx
    19fe:	48 c1 fa 10          	sar    $0x10,%rdx
    1a02:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    1a07:	48 8d 3d 16 06 00 00 	lea    0x616(%rip),%rdi        # 2024 <experimentalstrcnt+0x1c>
    1a0e:	b8 00 00 00 00       	mov    $0x0,%eax
    1a13:	e8 c8 f6 ff ff       	callq  10e0 <printf@plt>
    1a18:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    1a1d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1a24:	00 00 
    1a26:	75 0e                	jne    1a36 <experiment_optimize_1+0x196>
    1a28:	48 83 c4 50          	add    $0x50,%rsp
    1a2c:	5b                   	pop    %rbx
    1a2d:	41 5c                	pop    %r12
    1a2f:	41 5d                	pop    %r13
    1a31:	41 5e                	pop    %r14
    1a33:	41 5f                	pop    %r15
    1a35:	c3                   	retq   
    1a36:	e8 05 f7 ff ff       	callq  1140 <__stack_chk_fail@plt>
    1a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001a40 <experiment_optimize_2>:
    1a40:	f3 0f 1e fa          	endbr64 
    1a44:	41 57                	push   %r15
    1a46:	41 56                	push   %r14
    1a48:	41 55                	push   %r13
    1a4a:	45 31 ed             	xor    %r13d,%r13d
    1a4d:	41 54                	push   %r12
    1a4f:	45 31 e4             	xor    %r12d,%r12d
    1a52:	53                   	push   %rbx
    1a53:	48 8d 1d e6 28 00 00 	lea    0x28e6(%rip),%rbx        # 4340 <experimentalstr>
    1a5a:	48 83 ec 60          	sub    $0x60,%rsp
    1a5e:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    1a63:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
    1a68:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1a6f:	00 00 
    1a71:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    1a76:	31 c0                	xor    %eax,%eax
    1a78:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    1a7d:	c7 44 24 1c 00 00 01 	movl   $0x10000,0x1c(%rsp)
    1a84:	00 
    1a85:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    1a8c:	00 00 
    1a8e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    1a95:	00 00 
    1a97:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    1a9e:	00 00 
    1aa0:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    1aa7:	00 00 
    1aa9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    1aae:	eb 36                	jmp    1ae6 <experiment_optimize_2+0xa6>
    1ab0:	31 c0                	xor    %eax,%eax
    1ab2:	4c 89 fe             	mov    %r15,%rsi
    1ab5:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    1aba:	48 8d 3d 54 05 00 00 	lea    0x554(%rip),%rdi        # 2015 <experimentalstrcnt+0xd>
    1ac1:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1ac6:	e8 15 f6 ff ff       	callq  10e0 <printf@plt>
    1acb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1ad0:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    1ad5:	49 01 d4             	add    %rdx,%r12
    1ad8:	49 01 cd             	add    %rcx,%r13
    1adb:	83 6c 24 1c 01       	subl   $0x1,0x1c(%rsp)
    1ae0:	0f 84 ac 00 00 00    	je     1b92 <experiment_optimize_2+0x152>
    1ae6:	e8 25 f6 ff ff       	callq  1110 <random@plt>
    1aeb:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    1af0:	31 ff                	xor    %edi,%edi
    1af2:	41 89 c7             	mov    %eax,%r15d
    1af5:	e8 36 f6 ff ff       	callq  1130 <clock_gettime@plt>
    1afa:	41 81 e7 ff 03 00 00 	and    $0x3ff,%r15d
    1b01:	49 63 d7             	movslq %r15d,%rdx
    1b04:	48 89 d0             	mov    %rdx,%rax
    1b07:	48 c1 e0 09          	shl    $0x9,%rax
    1b0b:	48 01 d0             	add    %rdx,%rax
    1b0e:	48 89 da             	mov    %rbx,%rdx
    1b11:	48 c1 e0 07          	shl    $0x7,%rax
    1b15:	48 01 c2             	add    %rax,%rdx
    1b18:	0f 82 ca 00 00 00    	jb     1be8 <experiment_optimize_2+0x1a8>
    1b1e:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    1b22:	49 89 d7             	mov    %rdx,%r15
    1b25:	41 8b 0f             	mov    (%r15),%ecx
    1b28:	49 83 c7 04          	add    $0x4,%r15
    1b2c:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    1b32:	f7 d1                	not    %ecx
    1b34:	21 c8                	and    %ecx,%eax
    1b36:	25 80 80 80 80       	and    $0x80808080,%eax
    1b3b:	74 e8                	je     1b25 <experiment_optimize_2+0xe5>
    1b3d:	89 c1                	mov    %eax,%ecx
    1b3f:	c1 e9 10             	shr    $0x10,%ecx
    1b42:	a9 80 80 00 00       	test   $0x8080,%eax
    1b47:	0f 44 c1             	cmove  %ecx,%eax
    1b4a:	49 8d 4f 02          	lea    0x2(%r15),%rcx
    1b4e:	4c 0f 44 f9          	cmove  %rcx,%r15
    1b52:	89 c6                	mov    %eax,%esi
    1b54:	40 00 c6             	add    %al,%sil
    1b57:	4c 89 f6             	mov    %r14,%rsi
    1b5a:	49 83 df 03          	sbb    $0x3,%r15
    1b5e:	31 ff                	xor    %edi,%edi
    1b60:	49 29 d7             	sub    %rdx,%r15
    1b63:	e8 c8 f5 ff ff       	callq  1130 <clock_gettime@plt>
    1b68:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    1b6d:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    1b72:	48 2b 54 24 30       	sub    0x30(%rsp),%rdx
    1b77:	48 2b 4c 24 38       	sub    0x38(%rsp),%rcx
    1b7c:	0f 89 2e ff ff ff    	jns    1ab0 <experiment_optimize_2+0x70>
    1b82:	48 83 ea 01          	sub    $0x1,%rdx
    1b86:	48 81 c1 00 ca 9a 3b 	add    $0x3b9aca00,%rcx
    1b8d:	e9 1e ff ff ff       	jmpq   1ab0 <experiment_optimize_2+0x70>
    1b92:	4d 85 ed             	test   %r13,%r13
    1b95:	49 8d 8d ff ff 00 00 	lea    0xffff(%r13),%rcx
    1b9c:	49 8d 94 24 ff ff 00 	lea    0xffff(%r12),%rdx
    1ba3:	00 
    1ba4:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    1ba9:	49 0f 49 cd          	cmovns %r13,%rcx
    1bad:	48 8d 3d 70 04 00 00 	lea    0x470(%rip),%rdi        # 2024 <experimentalstrcnt+0x1c>
    1bb4:	48 c1 f9 10          	sar    $0x10,%rcx
    1bb8:	4d 85 e4             	test   %r12,%r12
    1bbb:	49 0f 49 d4          	cmovns %r12,%rdx
    1bbf:	31 c0                	xor    %eax,%eax
    1bc1:	48 c1 fa 10          	sar    $0x10,%rdx
    1bc5:	e8 16 f5 ff ff       	callq  10e0 <printf@plt>
    1bca:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    1bcf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1bd6:	00 00 
    1bd8:	75 30                	jne    1c0a <experiment_optimize_2+0x1ca>
    1bda:	48 83 c4 60          	add    $0x60,%rsp
    1bde:	5b                   	pop    %rbx
    1bdf:	41 5c                	pop    %r12
    1be1:	41 5d                	pop    %r13
    1be3:	41 5e                	pop    %r14
    1be5:	41 5f                	pop    %r15
    1be7:	c3                   	retq   
    1be8:	48 8d 35 51 27 00 00 	lea    0x2751(%rip),%rsi        # 4340 <experimentalstr>
    1bef:	48 8d 3d 8a 26 00 00 	lea    0x268a(%rip),%rdi        # 4280 <__dso_handle+0x278>
    1bf6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1bfb:	e8 20 f5 ff ff       	callq  1120 <__ubsan_handle_pointer_overflow@plt>
    1c00:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1c05:	e9 14 ff ff ff       	jmpq   1b1e <experiment_optimize_2+0xde>
    1c0a:	e8 31 f5 ff ff       	callq  1140 <__stack_chk_fail@plt>
    1c0f:	90                   	nop

0000000000001c10 <experiment_optimize_3>:
    1c10:	f3 0f 1e fa          	endbr64 
    1c14:	41 57                	push   %r15
    1c16:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1c1a:	41 56                	push   %r14
    1c1c:	41 55                	push   %r13
    1c1e:	45 31 ed             	xor    %r13d,%r13d
    1c21:	41 54                	push   %r12
    1c23:	45 31 e4             	xor    %r12d,%r12d
    1c26:	53                   	push   %rbx
    1c27:	48 8d 1d 12 27 00 00 	lea    0x2712(%rip),%rbx        # 4340 <experimentalstr>
    1c2e:	48 83 ec 60          	sub    $0x60,%rsp
    1c32:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    1c37:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
    1c3c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1c43:	00 00 
    1c45:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    1c4a:	31 c0                	xor    %eax,%eax
    1c4c:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    1c51:	c7 44 24 24 00 00 01 	movl   $0x10000,0x24(%rsp)
    1c58:	00 
    1c59:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1c5e:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    1c63:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    1c68:	eb 3c                	jmp    1ca6 <experiment_optimize_3+0x96>
    1c6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1c70:	31 c0                	xor    %eax,%eax
    1c72:	4c 89 fe             	mov    %r15,%rsi
    1c75:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    1c7a:	48 8d 3d 94 03 00 00 	lea    0x394(%rip),%rdi        # 2015 <experimentalstrcnt+0xd>
    1c81:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1c86:	e8 55 f4 ff ff       	callq  10e0 <printf@plt>
    1c8b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1c90:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    1c95:	49 01 d4             	add    %rdx,%r12
    1c98:	49 01 cd             	add    %rcx,%r13
    1c9b:	83 6c 24 24 01       	subl   $0x1,0x24(%rsp)
    1ca0:	0f 84 af 00 00 00    	je     1d55 <experiment_optimize_3+0x145>
    1ca6:	e8 65 f4 ff ff       	callq  1110 <random@plt>
    1cab:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    1cb0:	31 ff                	xor    %edi,%edi
    1cb2:	41 89 c7             	mov    %eax,%r15d
    1cb5:	e8 76 f4 ff ff       	callq  1130 <clock_gettime@plt>
    1cba:	41 81 e7 ff 03 00 00 	and    $0x3ff,%r15d
    1cc1:	49 63 d7             	movslq %r15d,%rdx
    1cc4:	48 89 d0             	mov    %rdx,%rax
    1cc7:	48 c1 e0 09          	shl    $0x9,%rax
    1ccb:	48 01 d0             	add    %rdx,%rax
    1cce:	48 89 da             	mov    %rbx,%rdx
    1cd1:	48 c1 e0 07          	shl    $0x7,%rax
    1cd5:	48 01 c2             	add    %rax,%rdx
    1cd8:	0f 82 cd 00 00 00    	jb     1dab <experiment_optimize_3+0x19b>
    1cde:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    1ce2:	49 89 d7             	mov    %rdx,%r15
    1ce5:	41 8b 0f             	mov    (%r15),%ecx
    1ce8:	49 83 c7 04          	add    $0x4,%r15
    1cec:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    1cf2:	f7 d1                	not    %ecx
    1cf4:	21 c8                	and    %ecx,%eax
    1cf6:	25 80 80 80 80       	and    $0x80808080,%eax
    1cfb:	74 e8                	je     1ce5 <experiment_optimize_3+0xd5>
    1cfd:	89 c1                	mov    %eax,%ecx
    1cff:	c1 e9 10             	shr    $0x10,%ecx
    1d02:	a9 80 80 00 00       	test   $0x8080,%eax
    1d07:	0f 44 c1             	cmove  %ecx,%eax
    1d0a:	49 8d 4f 02          	lea    0x2(%r15),%rcx
    1d0e:	4c 0f 44 f9          	cmove  %rcx,%r15
    1d12:	89 c6                	mov    %eax,%esi
    1d14:	40 00 c6             	add    %al,%sil
    1d17:	4c 89 f6             	mov    %r14,%rsi
    1d1a:	49 83 df 03          	sbb    $0x3,%r15
    1d1e:	31 ff                	xor    %edi,%edi
    1d20:	49 29 d7             	sub    %rdx,%r15
    1d23:	e8 08 f4 ff ff       	callq  1130 <clock_gettime@plt>
    1d28:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    1d2d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    1d32:	48 2b 54 24 30       	sub    0x30(%rsp),%rdx
    1d37:	48 2b 44 24 38       	sub    0x38(%rsp),%rax
    1d3c:	48 89 c1             	mov    %rax,%rcx
    1d3f:	0f 89 2b ff ff ff    	jns    1c70 <experiment_optimize_3+0x60>
    1d45:	48 83 ea 01          	sub    $0x1,%rdx
    1d49:	48 81 c1 00 ca 9a 3b 	add    $0x3b9aca00,%rcx
    1d50:	e9 1b ff ff ff       	jmpq   1c70 <experiment_optimize_3+0x60>
    1d55:	4d 85 ed             	test   %r13,%r13
    1d58:	49 8d 8d ff ff 00 00 	lea    0xffff(%r13),%rcx
    1d5f:	49 8d 94 24 ff ff 00 	lea    0xffff(%r12),%rdx
    1d66:	00 
    1d67:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    1d6c:	49 0f 49 cd          	cmovns %r13,%rcx
    1d70:	48 8d 3d ad 02 00 00 	lea    0x2ad(%rip),%rdi        # 2024 <experimentalstrcnt+0x1c>
    1d77:	48 c1 f9 10          	sar    $0x10,%rcx
    1d7b:	4d 85 e4             	test   %r12,%r12
    1d7e:	49 0f 49 d4          	cmovns %r12,%rdx
    1d82:	31 c0                	xor    %eax,%eax
    1d84:	48 c1 fa 10          	sar    $0x10,%rdx
    1d88:	e8 53 f3 ff ff       	callq  10e0 <printf@plt>
    1d8d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    1d92:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1d99:	00 00 
    1d9b:	75 30                	jne    1dcd <experiment_optimize_3+0x1bd>
    1d9d:	48 83 c4 60          	add    $0x60,%rsp
    1da1:	5b                   	pop    %rbx
    1da2:	41 5c                	pop    %r12
    1da4:	41 5d                	pop    %r13
    1da6:	41 5e                	pop    %r14
    1da8:	41 5f                	pop    %r15
    1daa:	c3                   	retq   
    1dab:	48 8d 35 8e 25 00 00 	lea    0x258e(%rip),%rsi        # 4340 <experimentalstr>
    1db2:	48 8d 3d 07 25 00 00 	lea    0x2507(%rip),%rdi        # 42c0 <__dso_handle+0x2b8>
    1db9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1dbe:	e8 5d f3 ff ff       	callq  1120 <__ubsan_handle_pointer_overflow@plt>
    1dc3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1dc8:	e9 11 ff ff ff       	jmpq   1cde <experiment_optimize_3+0xce>
    1dcd:	e8 6e f3 ff ff       	callq  1140 <__stack_chk_fail@plt>
    1dd2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1dd9:	00 00 00 00 
    1ddd:	0f 1f 00             	nopl   (%rax)

0000000000001de0 <main>:
    1de0:	f3 0f 1e fa          	endbr64 
    1de4:	55                   	push   %rbp
    1de5:	48 89 e5             	mov    %rsp,%rbp
    1de8:	48 83 ec 10          	sub    $0x10,%rsp
    1dec:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1def:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1df3:	e8 78 f4 ff ff       	callq  1270 <init>
    1df8:	48 8d 3d 33 02 00 00 	lea    0x233(%rip),%rdi        # 2032 <experimentalstrcnt+0x2a>
    1dff:	e8 8c f7 ff ff       	callq  1590 <experiment_optimize_0>
    1e04:	48 8d 3d 37 02 00 00 	lea    0x237(%rip),%rdi        # 2042 <experimentalstrcnt+0x3a>
    1e0b:	e8 90 fa ff ff       	callq  18a0 <experiment_optimize_1>
    1e10:	48 8d 3d 3b 02 00 00 	lea    0x23b(%rip),%rdi        # 2052 <experimentalstrcnt+0x4a>
    1e17:	e8 24 fc ff ff       	callq  1a40 <experiment_optimize_2>
    1e1c:	48 8d 3d 3f 02 00 00 	lea    0x23f(%rip),%rdi        # 2062 <experimentalstrcnt+0x5a>
    1e23:	e8 e8 fd ff ff       	callq  1c10 <experiment_optimize_3>
    1e28:	b8 00 00 00 00       	mov    $0x0,%eax
    1e2d:	c9                   	leaveq 
    1e2e:	c3                   	retq   
    1e2f:	90                   	nop

0000000000001e30 <__libc_csu_init>:
    1e30:	f3 0f 1e fa          	endbr64 
    1e34:	41 57                	push   %r15
    1e36:	4c 8d 3d 23 1f 00 00 	lea    0x1f23(%rip),%r15        # 3d60 <__frame_dummy_init_array_entry>
    1e3d:	41 56                	push   %r14
    1e3f:	49 89 d6             	mov    %rdx,%r14
    1e42:	41 55                	push   %r13
    1e44:	49 89 f5             	mov    %rsi,%r13
    1e47:	41 54                	push   %r12
    1e49:	41 89 fc             	mov    %edi,%r12d
    1e4c:	55                   	push   %rbp
    1e4d:	48 8d 2d 14 1f 00 00 	lea    0x1f14(%rip),%rbp        # 3d68 <__do_global_dtors_aux_fini_array_entry>
    1e54:	53                   	push   %rbx
    1e55:	4c 29 fd             	sub    %r15,%rbp
    1e58:	48 83 ec 08          	sub    $0x8,%rsp
    1e5c:	e8 9f f1 ff ff       	callq  1000 <_init>
    1e61:	48 c1 fd 03          	sar    $0x3,%rbp
    1e65:	74 1f                	je     1e86 <__libc_csu_init+0x56>
    1e67:	31 db                	xor    %ebx,%ebx
    1e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1e70:	4c 89 f2             	mov    %r14,%rdx
    1e73:	4c 89 ee             	mov    %r13,%rsi
    1e76:	44 89 e7             	mov    %r12d,%edi
    1e79:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e7d:	48 83 c3 01          	add    $0x1,%rbx
    1e81:	48 39 dd             	cmp    %rbx,%rbp
    1e84:	75 ea                	jne    1e70 <__libc_csu_init+0x40>
    1e86:	48 83 c4 08          	add    $0x8,%rsp
    1e8a:	5b                   	pop    %rbx
    1e8b:	5d                   	pop    %rbp
    1e8c:	41 5c                	pop    %r12
    1e8e:	41 5d                	pop    %r13
    1e90:	41 5e                	pop    %r14
    1e92:	41 5f                	pop    %r15
    1e94:	c3                   	retq   
    1e95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1e9c:	00 00 00 00 

0000000000001ea0 <__libc_csu_fini>:
    1ea0:	f3 0f 1e fa          	endbr64 
    1ea4:	c3                   	retq   

Disassembly of section .fini:

0000000000001ea8 <_fini>:
    1ea8:	f3 0f 1e fa          	endbr64 
    1eac:	48 83 ec 08          	sub    $0x8,%rsp
    1eb0:	48 83 c4 08          	add    $0x8,%rsp
    1eb4:	c3                   	retq   
