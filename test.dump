
./src/example-string-new:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 c2 3e 00 00    	pushq  0x3ec2(%rip)        # 4ee8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 c3 3e 00 00 	bnd jmpq *0x3ec3(%rip)        # 4ef0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	pushq  $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmpq 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	pushq  $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmpq 1020 <.plt>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	pushq  $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmpq 1020 <.plt>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	pushq  $0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmpq 1020 <.plt>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	pushq  $0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmpq 1020 <.plt>
    115f:	90                   	nop
    1160:	f3 0f 1e fa          	endbr64 
    1164:	68 13 00 00 00       	pushq  $0x13
    1169:	f2 e9 b1 fe ff ff    	bnd jmpq 1020 <.plt>
    116f:	90                   	nop
    1170:	f3 0f 1e fa          	endbr64 
    1174:	68 14 00 00 00       	pushq  $0x14
    1179:	f2 e9 a1 fe ff ff    	bnd jmpq 1020 <.plt>
    117f:	90                   	nop
    1180:	f3 0f 1e fa          	endbr64 
    1184:	68 15 00 00 00       	pushq  $0x15
    1189:	f2 e9 91 fe ff ff    	bnd jmpq 1020 <.plt>
    118f:	90                   	nop
    1190:	f3 0f 1e fa          	endbr64 
    1194:	68 16 00 00 00       	pushq  $0x16
    1199:	f2 e9 81 fe ff ff    	bnd jmpq 1020 <.plt>
    119f:	90                   	nop
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	68 17 00 00 00       	pushq  $0x17
    11a9:	f2 e9 71 fe ff ff    	bnd jmpq 1020 <.plt>
    11af:	90                   	nop
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	68 18 00 00 00       	pushq  $0x18
    11b9:	f2 e9 61 fe ff ff    	bnd jmpq 1020 <.plt>
    11bf:	90                   	nop
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	68 19 00 00 00       	pushq  $0x19
    11c9:	f2 e9 51 fe ff ff    	bnd jmpq 1020 <.plt>
    11cf:	90                   	nop
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	68 1a 00 00 00       	pushq  $0x1a
    11d9:	f2 e9 41 fe ff ff    	bnd jmpq 1020 <.plt>
    11df:	90                   	nop

Disassembly of section .plt.got:

00000000000011e0 <strlen@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 ed 3d 00 00 	bnd jmpq *0x3ded(%rip)        # 4fd8 <strlen@GLIBC_2.2.5>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <__cxa_finalize@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 fd 3d 00 00 	bnd jmpq *0x3dfd(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001200 <free@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 ed 3c 00 00 	bnd jmpq *0x3ced(%rip)        # 4ef8 <free@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <__errno_location@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 e5 3c 00 00 	bnd jmpq *0x3ce5(%rip)        # 4f00 <__errno_location@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <srandom@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 dd 3c 00 00 	bnd jmpq *0x3cdd(%rip)        # 4f08 <srandom@GLIBC_2.2.5>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <strcpy@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 d5 3c 00 00 	bnd jmpq *0x3cd5(%rip)        # 4f10 <strcpy@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <puts@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 cd 3c 00 00 	bnd jmpq *0x3ccd(%rip)        # 4f18 <puts@GLIBC_2.2.5>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <clock_gettime@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 c5 3c 00 00 	bnd jmpq *0x3cc5(%rip)        # 4f20 <clock_gettime@GLIBC_2.17>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001260 <fclose@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 bd 3c 00 00 	bnd jmpq *0x3cbd(%rip)        # 4f28 <fclose@GLIBC_2.2.5>
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <__stack_chk_fail@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 b5 3c 00 00 	bnd jmpq *0x3cb5(%rip)        # 4f30 <__stack_chk_fail@GLIBC_2.4>
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <printf@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 ad 3c 00 00 	bnd jmpq *0x3cad(%rip)        # 4f38 <printf@GLIBC_2.2.5>
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <pthread_setspecific@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 a5 3c 00 00 	bnd jmpq *0x3ca5(%rip)        # 4f40 <pthread_setspecific@GLIBC_2.2.5>
    129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012a0 <snprintf@plt>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	f2 ff 25 9d 3c 00 00 	bnd jmpq *0x3c9d(%rip)        # 4f48 <snprintf@GLIBC_2.2.5>
    12ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012b0 <gmtime_r@plt>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	f2 ff 25 95 3c 00 00 	bnd jmpq *0x3c95(%rip)        # 4f50 <gmtime_r@GLIBC_2.2.5>
    12bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012c0 <fputc@plt>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	f2 ff 25 8d 3c 00 00 	bnd jmpq *0x3c8d(%rip)        # 4f58 <fputc@GLIBC_2.2.5>
    12cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012d0 <calloc@plt>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	f2 ff 25 85 3c 00 00 	bnd jmpq *0x3c85(%rip)        # 4f60 <calloc@GLIBC_2.2.5>
    12db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012e0 <fprintf@plt>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	f2 ff 25 7d 3c 00 00 	bnd jmpq *0x3c7d(%rip)        # 4f68 <fprintf@GLIBC_2.2.5>
    12eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012f0 <memcpy@plt>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	f2 ff 25 75 3c 00 00 	bnd jmpq *0x3c75(%rip)        # 4f70 <memcpy@GLIBC_2.14>
    12fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001300 <time@plt>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	f2 ff 25 6d 3c 00 00 	bnd jmpq *0x3c6d(%rip)        # 4f78 <time@GLIBC_2.2.5>
    130b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001310 <random@plt>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	f2 ff 25 65 3c 00 00 	bnd jmpq *0x3c65(%rip)        # 4f80 <random@GLIBC_2.2.5>
    131b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001320 <pthread_getspecific@plt>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	f2 ff 25 5d 3c 00 00 	bnd jmpq *0x3c5d(%rip)        # 4f88 <pthread_getspecific@GLIBC_2.2.5>
    132b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001330 <malloc@plt>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	f2 ff 25 55 3c 00 00 	bnd jmpq *0x3c55(%rip)        # 4f90 <malloc@GLIBC_2.2.5>
    133b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001340 <fflush@plt>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	f2 ff 25 4d 3c 00 00 	bnd jmpq *0x3c4d(%rip)        # 4f98 <fflush@GLIBC_2.2.5>
    134b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001350 <pthread_key_create@plt>:
    1350:	f3 0f 1e fa          	endbr64 
    1354:	f2 ff 25 45 3c 00 00 	bnd jmpq *0x3c45(%rip)        # 4fa0 <pthread_key_create@GLIBC_2.2.5>
    135b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001360 <pthread_self@plt>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	f2 ff 25 3d 3c 00 00 	bnd jmpq *0x3c3d(%rip)        # 4fa8 <pthread_self@GLIBC_2.2.5>
    136b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001370 <fopen@plt>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	f2 ff 25 35 3c 00 00 	bnd jmpq *0x3c35(%rip)        # 4fb0 <fopen@GLIBC_2.2.5>
    137b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001380 <vfprintf@plt>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	f2 ff 25 2d 3c 00 00 	bnd jmpq *0x3c2d(%rip)        # 4fb8 <vfprintf@GLIBC_2.2.5>
    138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001390 <pthread_key_delete@plt>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	f2 ff 25 25 3c 00 00 	bnd jmpq *0x3c25(%rip)        # 4fc0 <pthread_key_delete@GLIBC_2.2.5>
    139b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013a0 <exit@plt>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	f2 ff 25 1d 3c 00 00 	bnd jmpq *0x3c1d(%rip)        # 4fc8 <exit@GLIBC_2.2.5>
    13ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000013b0 <_start>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	31 ed                	xor    %ebp,%ebp
    13b6:	49 89 d1             	mov    %rdx,%r9
    13b9:	5e                   	pop    %rsi
    13ba:	48 89 e2             	mov    %rsp,%rdx
    13bd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    13c1:	50                   	push   %rax
    13c2:	54                   	push   %rsp
    13c3:	4c 8d 05 96 19 00 00 	lea    0x1996(%rip),%r8        # 2d60 <__libc_csu_fini>
    13ca:	48 8d 0d 1f 19 00 00 	lea    0x191f(%rip),%rcx        # 2cf0 <__libc_csu_init>
    13d1:	48 8d 3d fd 08 00 00 	lea    0x8fd(%rip),%rdi        # 1cd5 <main>
    13d8:	ff 15 02 3c 00 00    	callq  *0x3c02(%rip)        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    13de:	f4                   	hlt    
    13df:	90                   	nop

00000000000013e0 <deregister_tm_clones>:
    13e0:	48 8d 3d 29 3c 00 00 	lea    0x3c29(%rip),%rdi        # 5010 <__TMC_END__>
    13e7:	48 8d 05 22 3c 00 00 	lea    0x3c22(%rip),%rax        # 5010 <__TMC_END__>
    13ee:	48 39 f8             	cmp    %rdi,%rax
    13f1:	74 15                	je     1408 <deregister_tm_clones+0x28>
    13f3:	48 8b 05 d6 3b 00 00 	mov    0x3bd6(%rip),%rax        # 4fd0 <_ITM_deregisterTMCloneTable>
    13fa:	48 85 c0             	test   %rax,%rax
    13fd:	74 09                	je     1408 <deregister_tm_clones+0x28>
    13ff:	ff e0                	jmpq   *%rax
    1401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1408:	c3                   	retq   
    1409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001410 <register_tm_clones>:
    1410:	48 8d 3d f9 3b 00 00 	lea    0x3bf9(%rip),%rdi        # 5010 <__TMC_END__>
    1417:	48 8d 35 f2 3b 00 00 	lea    0x3bf2(%rip),%rsi        # 5010 <__TMC_END__>
    141e:	48 29 fe             	sub    %rdi,%rsi
    1421:	48 89 f0             	mov    %rsi,%rax
    1424:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1428:	48 c1 f8 03          	sar    $0x3,%rax
    142c:	48 01 c6             	add    %rax,%rsi
    142f:	48 d1 fe             	sar    %rsi
    1432:	74 14                	je     1448 <register_tm_clones+0x38>
    1434:	48 8b 05 b5 3b 00 00 	mov    0x3bb5(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable>
    143b:	48 85 c0             	test   %rax,%rax
    143e:	74 08                	je     1448 <register_tm_clones+0x38>
    1440:	ff e0                	jmpq   *%rax
    1442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1448:	c3                   	retq   
    1449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001450 <__do_global_dtors_aux>:
    1450:	f3 0f 1e fa          	endbr64 
    1454:	80 3d cd 3b 00 00 00 	cmpb   $0x0,0x3bcd(%rip)        # 5028 <completed.8060>
    145b:	75 2b                	jne    1488 <__do_global_dtors_aux+0x38>
    145d:	55                   	push   %rbp
    145e:	48 83 3d 92 3b 00 00 	cmpq   $0x0,0x3b92(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    1465:	00 
    1466:	48 89 e5             	mov    %rsp,%rbp
    1469:	74 0c                	je     1477 <__do_global_dtors_aux+0x27>
    146b:	48 8b 3d 96 3b 00 00 	mov    0x3b96(%rip),%rdi        # 5008 <__dso_handle>
    1472:	e8 79 fd ff ff       	callq  11f0 <__cxa_finalize@plt>
    1477:	e8 64 ff ff ff       	callq  13e0 <deregister_tm_clones>
    147c:	c6 05 a5 3b 00 00 01 	movb   $0x1,0x3ba5(%rip)        # 5028 <completed.8060>
    1483:	5d                   	pop    %rbp
    1484:	c3                   	retq   
    1485:	0f 1f 00             	nopl   (%rax)
    1488:	c3                   	retq   
    1489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001490 <frame_dummy>:
    1490:	f3 0f 1e fa          	endbr64 
    1494:	e9 77 ff ff ff       	jmpq   1410 <register_tm_clones>

0000000000001499 <examplestrinit>:
    1499:	f3 0f 1e fa          	endbr64 
    149d:	55                   	push   %rbp
    149e:	48 89 e5             	mov    %rsp,%rbp
    14a1:	48 83 ec 10          	sub    $0x10,%rsp
    14a5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    14ac:	eb 77                	jmp    1525 <examplestrinit+0x8c>
    14ae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    14b5:	eb 3e                	jmp    14f5 <examplestrinit+0x5c>
    14b7:	bf 1a 00 00 00       	mov    $0x1a,%edi
    14bc:	e8 e6 0b 00 00       	callq  20a7 <xrandomunsigned64>
    14c1:	83 c0 61             	add    $0x61,%eax
    14c4:	89 c6                	mov    %eax,%esi
    14c6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    14c9:	48 63 c8             	movslq %eax,%rcx
    14cc:	8b 45 f8             	mov    -0x8(%rbp),%eax
    14cf:	48 63 d0             	movslq %eax,%rdx
    14d2:	48 89 d0             	mov    %rdx,%rax
    14d5:	48 c1 e0 0c          	shl    $0xc,%rax
    14d9:	48 01 d0             	add    %rdx,%rax
    14dc:	48 c1 e0 04          	shl    $0x4,%rax
    14e0:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
    14e4:	48 8d 05 55 3b 00 00 	lea    0x3b55(%rip),%rax        # 5040 <examplestr>
    14eb:	48 01 d0             	add    %rdx,%rax
    14ee:	40 88 30             	mov    %sil,(%rax)
    14f1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    14f5:	b8 00 00 01 00       	mov    $0x10000,%eax
    14fa:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    14fd:	7c b8                	jl     14b7 <examplestrinit+0x1e>
    14ff:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1502:	48 63 d0             	movslq %eax,%rdx
    1505:	48 89 d0             	mov    %rdx,%rax
    1508:	48 c1 e0 0c          	shl    $0xc,%rax
    150c:	48 01 d0             	add    %rdx,%rax
    150f:	48 c1 e0 04          	shl    $0x4,%rax
    1513:	48 89 c2             	mov    %rax,%rdx
    1516:	48 8d 05 23 3b 01 00 	lea    0x13b23(%rip),%rax        # 15040 <examplestr+0x10000>
    151d:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    1521:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1525:	b8 00 04 00 00       	mov    $0x400,%eax
    152a:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    152d:	0f 8c 7b ff ff ff    	jl     14ae <examplestrinit+0x15>
    1533:	90                   	nop
    1534:	90                   	nop
    1535:	c9                   	leaveq 
    1536:	c3                   	retq   

0000000000001537 <xstringlen_word_align>:
    1537:	f3 0f 1e fa          	endbr64 
    153b:	55                   	push   %rbp
    153c:	48 89 e5             	mov    %rsp,%rbp
    153f:	41 54                	push   %r12
    1541:	53                   	push   %rbx
    1542:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1546:	4c 8b 65 e8          	mov    -0x18(%rbp),%r12
    154a:	4c 89 e3             	mov    %r12,%rbx
    154d:	eb 14                	jmp    1563 <xstringlen_word_align+0x2c>
    154f:	0f b6 03             	movzbl (%rbx),%eax
    1552:	84 c0                	test   %al,%al
    1554:	75 09                	jne    155f <xstringlen_word_align+0x28>
    1556:	48 89 d8             	mov    %rbx,%rax
    1559:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    155d:	eb 14                	jmp    1573 <xstringlen_word_align+0x3c>
    155f:	48 83 c3 01          	add    $0x1,%rbx
    1563:	49 8d 44 24 08       	lea    0x8(%r12),%rax
    1568:	48 39 c3             	cmp    %rax,%rbx
    156b:	72 e2                	jb     154f <xstringlen_word_align+0x18>
    156d:	49 83 c4 08          	add    $0x8,%r12
    1571:	eb d7                	jmp    154a <xstringlen_word_align+0x13>
    1573:	5b                   	pop    %rbx
    1574:	41 5c                	pop    %r12
    1576:	5d                   	pop    %rbp
    1577:	c3                   	retq   

0000000000001578 <xstringlen_optimize_long>:
    1578:	f3 0f 1e fa          	endbr64 
    157c:	55                   	push   %rbp
    157d:	48 89 e5             	mov    %rsp,%rbp
    1580:	41 54                	push   %r12
    1582:	53                   	push   %rbx
    1583:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1587:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    158b:	eb 42                	jmp    15cf <xstringlen_optimize_long+0x57>
    158d:	4c 8b 23             	mov    (%rbx),%r12
    1590:	48 b8 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%rax
    1597:	fe fe fe 
    159a:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    159e:	4c 89 e0             	mov    %r12,%rax
    15a1:	48 f7 d0             	not    %rax
    15a4:	48 21 c2             	and    %rax,%rdx
    15a7:	48 b8 80 80 80 80 80 	movabs $0x8080808080808080,%rax
    15ae:	80 80 80 
    15b1:	48 21 d0             	and    %rdx,%rax
    15b4:	48 85 c0             	test   %rax,%rax
    15b7:	74 16                	je     15cf <xstringlen_optimize_long+0x57>
    15b9:	eb 04                	jmp    15bf <xstringlen_optimize_long+0x47>
    15bb:	48 83 c3 01          	add    $0x1,%rbx
    15bf:	0f b6 03             	movzbl (%rbx),%eax
    15c2:	84 c0                	test   %al,%al
    15c4:	75 f5                	jne    15bb <xstringlen_optimize_long+0x43>
    15c6:	48 89 d8             	mov    %rbx,%rax
    15c9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    15cd:	eb 0e                	jmp    15dd <xstringlen_optimize_long+0x65>
    15cf:	48 83 c3 08          	add    $0x8,%rbx
    15d3:	48 85 db             	test   %rbx,%rbx
    15d6:	75 b5                	jne    158d <xstringlen_optimize_long+0x15>
    15d8:	b8 00 00 00 00       	mov    $0x0,%eax
    15dd:	5b                   	pop    %rbx
    15de:	41 5c                	pop    %r12
    15e0:	5d                   	pop    %rbp
    15e1:	c3                   	retq   

00000000000015e2 <xstrlen>:
    15e2:	f3 0f 1e fa          	endbr64 
    15e6:	55                   	push   %rbp
    15e7:	48 89 e5             	mov    %rsp,%rbp
    15ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    15ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    15f2:	48 83 e8 01          	sub    $0x1,%rax
    15f6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    15fa:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    15ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1603:	83 e0 07             	and    $0x7,%eax
    1606:	48 85 c0             	test   %rax,%rax
    1609:	75 42                	jne    164d <xstrlen+0x6b>
    160b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    160f:	48 8b 00             	mov    (%rax),%rax
    1612:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1616:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
    161b:	48 ba ff fe fe fe fe 	movabs $0xfefefefefefefeff,%rdx
    1622:	fe fe fe 
    1625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1629:	48 01 c2             	add    %rax,%rdx
    162c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1630:	48 f7 d0             	not    %rax
    1633:	48 21 c2             	and    %rax,%rdx
    1636:	48 b8 80 80 80 80 80 	movabs $0x8080808080808080,%rax
    163d:	80 80 80 
    1640:	48 21 d0             	and    %rdx,%rax
    1643:	48 85 c0             	test   %rax,%rax
    1646:	74 c3                	je     160b <xstrlen+0x29>
    1648:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    164d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1651:	0f b6 00             	movzbl (%rax),%eax
    1654:	84 c0                	test   %al,%al
    1656:	75 a2                	jne    15fa <xstrlen+0x18>
    1658:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    165c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    1660:	5d                   	pop    %rbp
    1661:	c3                   	retq   

0000000000001662 <xstringlen_optimize_128>:
    1662:	f3 0f 1e fa          	endbr64 
    1666:	55                   	push   %rbp
    1667:	48 89 e5             	mov    %rsp,%rbp
    166a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    166e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1672:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1676:	eb 1d                	jmp    1695 <xstringlen_optimize_128+0x33>
    1678:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    167c:	0f b6 00             	movzbl (%rax),%eax
    167f:	84 c0                	test   %al,%al
    1681:	75 0d                	jne    1690 <xstringlen_optimize_128+0x2e>
    1683:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1687:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    168b:	e9 67 01 00 00       	jmpq   17f7 <xstringlen_optimize_128+0x195>
    1690:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    1695:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1699:	83 e0 07             	and    $0x7,%eax
    169c:	48 85 c0             	test   %rax,%rax
    169f:	75 d7                	jne    1678 <xstringlen_optimize_128+0x16>
    16a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    16a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    16a9:	b8 80 80 80 80       	mov    $0x80808080,%eax
    16ae:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    16b2:	48 c7 45 e8 01 01 01 	movq   $0x1010101,-0x18(%rbp)
    16b9:	01 
    16ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16be:	48 c1 e0 20          	shl    $0x20,%rax
    16c2:	48 09 45 e0          	or     %rax,-0x20(%rbp)
    16c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16ca:	48 c1 e0 20          	shl    $0x20,%rax
    16ce:	48 09 45 e8          	or     %rax,-0x18(%rbp)
    16d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16d6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    16da:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    16de:	48 8b 00             	mov    (%rax),%rax
    16e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    16e9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    16ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    16f1:	48 f7 d2             	not    %rdx
    16f4:	48 21 d0             	and    %rdx,%rax
    16f7:	48 23 45 e0          	and    -0x20(%rbp),%rax
    16fb:	48 85 c0             	test   %rax,%rax
    16fe:	74 d2                	je     16d2 <xstringlen_optimize_128+0x70>
    1700:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1704:	48 83 e8 08          	sub    $0x8,%rax
    1708:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    170c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1710:	0f b6 00             	movzbl (%rax),%eax
    1713:	84 c0                	test   %al,%al
    1715:	75 0d                	jne    1724 <xstringlen_optimize_128+0xc2>
    1717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    171b:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    171f:	e9 d3 00 00 00       	jmpq   17f7 <xstringlen_optimize_128+0x195>
    1724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1728:	48 83 c0 01          	add    $0x1,%rax
    172c:	0f b6 00             	movzbl (%rax),%eax
    172f:	84 c0                	test   %al,%al
    1731:	75 11                	jne    1744 <xstringlen_optimize_128+0xe2>
    1733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1737:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    173b:	48 83 c0 01          	add    $0x1,%rax
    173f:	e9 b3 00 00 00       	jmpq   17f7 <xstringlen_optimize_128+0x195>
    1744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1748:	48 83 c0 02          	add    $0x2,%rax
    174c:	0f b6 00             	movzbl (%rax),%eax
    174f:	84 c0                	test   %al,%al
    1751:	75 11                	jne    1764 <xstringlen_optimize_128+0x102>
    1753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1757:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    175b:	48 83 c0 02          	add    $0x2,%rax
    175f:	e9 93 00 00 00       	jmpq   17f7 <xstringlen_optimize_128+0x195>
    1764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1768:	48 83 c0 03          	add    $0x3,%rax
    176c:	0f b6 00             	movzbl (%rax),%eax
    176f:	84 c0                	test   %al,%al
    1771:	75 0e                	jne    1781 <xstringlen_optimize_128+0x11f>
    1773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1777:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    177b:	48 83 c0 03          	add    $0x3,%rax
    177f:	eb 76                	jmp    17f7 <xstringlen_optimize_128+0x195>
    1781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1785:	48 83 c0 04          	add    $0x4,%rax
    1789:	0f b6 00             	movzbl (%rax),%eax
    178c:	84 c0                	test   %al,%al
    178e:	75 0e                	jne    179e <xstringlen_optimize_128+0x13c>
    1790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1794:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    1798:	48 83 c0 04          	add    $0x4,%rax
    179c:	eb 59                	jmp    17f7 <xstringlen_optimize_128+0x195>
    179e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17a2:	48 83 c0 05          	add    $0x5,%rax
    17a6:	0f b6 00             	movzbl (%rax),%eax
    17a9:	84 c0                	test   %al,%al
    17ab:	75 0e                	jne    17bb <xstringlen_optimize_128+0x159>
    17ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17b1:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    17b5:	48 83 c0 05          	add    $0x5,%rax
    17b9:	eb 3c                	jmp    17f7 <xstringlen_optimize_128+0x195>
    17bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17bf:	48 83 c0 06          	add    $0x6,%rax
    17c3:	0f b6 00             	movzbl (%rax),%eax
    17c6:	84 c0                	test   %al,%al
    17c8:	75 0e                	jne    17d8 <xstringlen_optimize_128+0x176>
    17ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17ce:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    17d2:	48 83 c0 06          	add    $0x6,%rax
    17d6:	eb 1f                	jmp    17f7 <xstringlen_optimize_128+0x195>
    17d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17dc:	48 83 c0 07          	add    $0x7,%rax
    17e0:	0f b6 00             	movzbl (%rax),%eax
    17e3:	84 c0                	test   %al,%al
    17e5:	0f 85 e7 fe ff ff    	jne    16d2 <xstringlen_optimize_128+0x70>
    17eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    17ef:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    17f3:	48 83 c0 07          	add    $0x7,%rax
    17f7:	5d                   	pop    %rbp
    17f8:	c3                   	retq   

00000000000017f9 <xstringlen_optimize_int>:
    17f9:	f3 0f 1e fa          	endbr64 
    17fd:	55                   	push   %rbp
    17fe:	48 89 e5             	mov    %rsp,%rbp
    1801:	41 55                	push   %r13
    1803:	41 54                	push   %r12
    1805:	53                   	push   %rbx
    1806:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    180a:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    180e:	44 8b 2b             	mov    (%rbx),%r13d
    1811:	41 bc 7f 7f 7f 7f    	mov    $0x7f7f7f7f,%r12d
    1817:	44 89 e8             	mov    %r13d,%eax
    181a:	44 21 e0             	and    %r12d,%eax
    181d:	44 01 e0             	add    %r12d,%eax
    1820:	44 09 e8             	or     %r13d,%eax
    1823:	44 09 e0             	or     %r12d,%eax
    1826:	83 f8 ff             	cmp    $0xffffffff,%eax
    1829:	74 09                	je     1834 <xstringlen_optimize_int+0x3b>
    182b:	48 89 d8             	mov    %rbx,%rax
    182e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    1832:	eb 06                	jmp    183a <xstringlen_optimize_int+0x41>
    1834:	48 83 c3 04          	add    $0x4,%rbx
    1838:	eb d4                	jmp    180e <xstringlen_optimize_int+0x15>
    183a:	5b                   	pop    %rbx
    183b:	41 5c                	pop    %r12
    183d:	41 5d                	pop    %r13
    183f:	5d                   	pop    %rbp
    1840:	c3                   	retq   

0000000000001841 <xstringlen_byte>:
    1841:	f3 0f 1e fa          	endbr64 
    1845:	55                   	push   %rbp
    1846:	48 89 e5             	mov    %rsp,%rbp
    1849:	53                   	push   %rbx
    184a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    184e:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1852:	eb 04                	jmp    1858 <xstringlen_byte+0x17>
    1854:	48 83 c3 01          	add    $0x1,%rbx
    1858:	0f b6 03             	movzbl (%rbx),%eax
    185b:	84 c0                	test   %al,%al
    185d:	75 f5                	jne    1854 <xstringlen_byte+0x13>
    185f:	48 89 d8             	mov    %rbx,%rax
    1862:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    1866:	5b                   	pop    %rbx
    1867:	5d                   	pop    %rbp
    1868:	c3                   	retq   

0000000000001869 <xstringlen_simd>:
    1869:	f3 0f 1e fa          	endbr64 
    186d:	55                   	push   %rbp
    186e:	48 89 e5             	mov    %rsp,%rbp
    1871:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1875:	b8 00 00 00 00       	mov    $0x0,%eax
    187a:	5d                   	pop    %rbp
    187b:	c3                   	retq   

000000000000187c <experiment>:
    187c:	f3 0f 1e fa          	endbr64 
    1880:	55                   	push   %rbp
    1881:	48 89 e5             	mov    %rsp,%rbp
    1884:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
    188b:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
    1892:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
    1899:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    18a0:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    18a7:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    18ae:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    18b5:	84 c0                	test   %al,%al
    18b7:	74 20                	je     18d9 <experiment+0x5d>
    18b9:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    18bd:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    18c1:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    18c5:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    18c9:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    18cd:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    18d1:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    18d5:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    18d9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    18e0:	00 00 
    18e2:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    18e9:	31 c0                	xor    %eax,%eax
    18eb:	48 c7 85 d0 fe ff ff 	movq   $0x0,-0x130(%rbp)
    18f2:	00 00 00 00 
    18f6:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
    18fd:	00 00 00 00 
    1901:	48 c7 85 e0 fe ff ff 	movq   $0x0,-0x120(%rbp)
    1908:	00 00 00 00 
    190c:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
    1913:	00 00 00 00 
    1917:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
    191e:	00 00 00 00 
    1922:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    1929:	00 00 00 00 
    192d:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
    1934:	00 00 00 00 
    1938:	48 c7 85 08 ff ff ff 	movq   $0x0,-0xf8(%rbp)
    193f:	00 00 00 00 
    1943:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
    194a:	00 00 00 00 
    194e:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
    1955:	00 00 00 00 
    1959:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
    1960:	00 00 00 00 
    1964:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
    196b:	00 00 00 00 
    196f:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
    1976:	00 00 00 00 
    197a:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    1981:	00 00 00 00 
    1985:	48 c7 85 c0 fe ff ff 	movq   $0x0,-0x140(%rbp)
    198c:	00 00 00 00 
    1990:	48 c7 85 d0 fe ff ff 	movq   $0x0,-0x130(%rbp)
    1997:	00 00 00 00 
    199b:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
    19a2:	00 00 00 00 
    19a6:	48 c7 85 e0 fe ff ff 	movq   $0x0,-0x120(%rbp)
    19ad:	00 00 00 00 
    19b1:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
    19b8:	00 00 00 00 
    19bc:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
    19c3:	00 00 00 00 
    19c7:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    19ce:	00 00 00 00 
    19d2:	48 c7 85 00 ff ff ff 	movq   $0x0,-0x100(%rbp)
    19d9:	00 00 00 00 
    19dd:	48 c7 85 08 ff ff ff 	movq   $0x0,-0xf8(%rbp)
    19e4:	00 00 00 00 
    19e8:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    19ef:	ff ff 7f 
    19f2:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    19f9:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    1a00:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
    1a07:	00 00 00 00 
    1a0b:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
    1a12:	00 00 00 00 
    1a16:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
    1a1d:	00 00 00 00 
    1a21:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    1a28:	00 00 00 00 
    1a2c:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
    1a33:	00 00 00 
    1a36:	e9 99 01 00 00       	jmpq   1bd4 <experiment+0x358>
    1a3b:	b8 00 04 00 00       	mov    $0x400,%eax
    1a40:	48 98                	cltq   
    1a42:	48 89 c7             	mov    %rax,%rdi
    1a45:	e8 5d 06 00 00       	callq  20a7 <xrandomunsigned64>
    1a4a:	48 89 c2             	mov    %rax,%rdx
    1a4d:	48 89 d0             	mov    %rdx,%rax
    1a50:	48 c1 e0 0c          	shl    $0xc,%rax
    1a54:	48 01 d0             	add    %rdx,%rax
    1a57:	48 c1 e0 04          	shl    $0x4,%rax
    1a5b:	48 8d 15 de 35 00 00 	lea    0x35de(%rip),%rdx        # 5040 <examplestr>
    1a62:	48 01 d0             	add    %rdx,%rax
    1a65:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    1a6c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    1a73:	48 89 c7             	mov    %rax,%rdi
    1a76:	e8 67 fb ff ff       	callq  15e2 <xstrlen>
    1a7b:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    1a82:	e8 5d 07 00 00       	callq  21e4 <xtimeget>
    1a87:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    1a8e:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
    1a95:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    1a9c:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
    1aa3:	48 89 c7             	mov    %rax,%rdi
    1aa6:	ff d2                	callq  *%rdx
    1aa8:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    1aaf:	e8 30 07 00 00       	callq  21e4 <xtimeget>
    1ab4:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    1abb:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
    1ac2:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    1ac9:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    1ad0:	48 89 d6             	mov    %rdx,%rsi
    1ad3:	48 89 c7             	mov    %rax,%rdi
    1ad6:	e8 a4 07 00 00       	callq  227f <xtimediff>
    1adb:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    1ae2:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
    1ae9:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    1af0:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    1af7:	48 89 d6             	mov    %rdx,%rsi
    1afa:	48 89 c7             	mov    %rax,%rdi
    1afd:	e8 ec 07 00 00       	callq  22ee <xtimecmp>
    1b02:	48 85 c0             	test   %rax,%rax
    1b05:	79 1c                	jns    1b23 <experiment+0x2a7>
    1b07:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    1b0e:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    1b15:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    1b1c:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
    1b23:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    1b2a:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    1b31:	48 89 d6             	mov    %rdx,%rsi
    1b34:	48 89 c7             	mov    %rax,%rdi
    1b37:	e8 b2 07 00 00       	callq  22ee <xtimecmp>
    1b3c:	48 85 c0             	test   %rax,%rax
    1b3f:	7e 1c                	jle    1b5d <experiment+0x2e1>
    1b41:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    1b48:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    1b4f:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    1b56:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
    1b5d:	48 8b bd f8 fe ff ff 	mov    -0x108(%rbp),%rdi
    1b64:	48 8b b5 f0 fe ff ff 	mov    -0x110(%rbp),%rsi
    1b6b:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    1b72:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1b76:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
    1b7c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    1b83:	49 89 f9             	mov    %rdi,%r9
    1b86:	49 89 f0             	mov    %rsi,%r8
    1b89:	48 89 c6             	mov    %rax,%rsi
    1b8c:	48 8d 3d 7d 14 00 00 	lea    0x147d(%rip),%rdi        # 3010 <experimentalcount+0x4>
    1b93:	b8 00 00 00 00       	mov    $0x0,%eax
    1b98:	e8 e3 f6 ff ff       	callq  1280 <printf@plt>
    1b9d:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    1ba4:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    1bab:	48 01 d0             	add    %rdx,%rax
    1bae:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    1bb5:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    1bbc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    1bc3:	48 01 d0             	add    %rdx,%rax
    1bc6:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    1bcd:	83 85 bc fe ff ff 01 	addl   $0x1,-0x144(%rbp)
    1bd4:	b8 00 00 01 00       	mov    $0x10000,%eax
    1bd9:	39 85 bc fe ff ff    	cmp    %eax,-0x144(%rbp)
    1bdf:	0f 8c 56 fe ff ff    	jl     1a3b <experiment+0x1bf>
    1be5:	48 8d 3d 3b 14 00 00 	lea    0x143b(%rip),%rdi        # 3027 <experimentalcount+0x1b>
    1bec:	e8 4f f6 ff ff       	callq  1240 <puts@plt>
    1bf1:	b8 00 00 01 00       	mov    $0x10000,%eax
    1bf6:	48 63 d0             	movslq %eax,%rdx
    1bf9:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    1c00:	48 89 d6             	mov    %rdx,%rsi
    1c03:	48 89 c7             	mov    %rax,%rdi
    1c06:	e8 30 07 00 00       	callq  233b <xtimeavg>
    1c0b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    1c12:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    1c19:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
    1c20:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    1c27:	be 00 00 01 00       	mov    $0x10000,%esi
    1c2c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    1c33:	49 89 c8             	mov    %rcx,%r8
    1c36:	48 89 d1             	mov    %rdx,%rcx
    1c39:	89 f2                	mov    %esi,%edx
    1c3b:	48 89 c6             	mov    %rax,%rsi
    1c3e:	48 8d 3d e4 13 00 00 	lea    0x13e4(%rip),%rdi        # 3029 <experimentalcount+0x1d>
    1c45:	b8 00 00 00 00       	mov    $0x0,%eax
    1c4a:	e8 31 f6 ff ff       	callq  1280 <printf@plt>
    1c4f:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
    1c56:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    1c5d:	be 00 00 01 00       	mov    $0x10000,%esi
    1c62:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    1c69:	49 89 c8             	mov    %rcx,%r8
    1c6c:	48 89 d1             	mov    %rdx,%rcx
    1c6f:	89 f2                	mov    %esi,%edx
    1c71:	48 89 c6             	mov    %rax,%rsi
    1c74:	48 8d 3d c3 13 00 00 	lea    0x13c3(%rip),%rdi        # 303e <experimentalcount+0x32>
    1c7b:	b8 00 00 00 00       	mov    $0x0,%eax
    1c80:	e8 fb f5 ff ff       	callq  1280 <printf@plt>
    1c85:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
    1c8c:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    1c93:	be 00 00 01 00       	mov    $0x10000,%esi
    1c98:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    1c9f:	49 89 c8             	mov    %rcx,%r8
    1ca2:	48 89 d1             	mov    %rdx,%rcx
    1ca5:	89 f2                	mov    %esi,%edx
    1ca7:	48 89 c6             	mov    %rax,%rsi
    1caa:	48 8d 3d a2 13 00 00 	lea    0x13a2(%rip),%rdi        # 3053 <experimentalcount+0x47>
    1cb1:	b8 00 00 00 00       	mov    $0x0,%eax
    1cb6:	e8 c5 f5 ff ff       	callq  1280 <printf@plt>
    1cbb:	90                   	nop
    1cbc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    1cc3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1cca:	00 00 
    1ccc:	74 05                	je     1cd3 <experiment+0x457>
    1cce:	e8 9d f5 ff ff       	callq  1270 <__stack_chk_fail@plt>
    1cd3:	c9                   	leaveq 
    1cd4:	c3                   	retq   

0000000000001cd5 <main>:
    1cd5:	f3 0f 1e fa          	endbr64 
    1cd9:	55                   	push   %rbp
    1cda:	48 89 e5             	mov    %rsp,%rbp
    1cdd:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    1ce4:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%rbp)
    1cea:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    1cf1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1cf8:	00 00 
    1cfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1cfe:	31 c0                	xor    %eax,%eax
    1d00:	e8 94 f7 ff ff       	callq  1499 <examplestrinit>
    1d05:	48 8b 05 cc 32 00 00 	mov    0x32cc(%rip),%rax        # 4fd8 <strlen@GLIBC_2.2.5>
    1d0c:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    1d13:	48 8d 05 4e 13 00 00 	lea    0x134e(%rip),%rax        # 3068 <experimentalcount+0x5c>
    1d1a:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    1d21:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    1d28:	00 
    1d29:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    1d30:	00 
    1d31:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    1d38:	00 
    1d39:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    1d40:	00 
    1d41:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    1d48:	00 
    1d49:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    1d50:	00 
    1d51:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    1d58:	00 
    1d59:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    1d60:	00 
    1d61:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    1d68:	00 
    1d69:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    1d70:	00 
    1d71:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    1d78:	00 
    1d79:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    1d80:	00 
    1d81:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    1d88:	00 
    1d89:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    1d90:	00 
    1d91:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
    1d98:	00 00 00 00 
    1d9c:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    1da3:	00 
    1da4:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    1dab:	00 
    1dac:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    1db3:	00 
    1db4:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    1dbb:	00 
    1dbc:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    1dc3:	00 
    1dc4:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    1dcb:	00 
    1dcc:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    1dd3:	00 
    1dd4:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    1ddb:	00 
    1ddc:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    1de3:	ff ff 7f 
    1de6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1dea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1dee:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    1df5:	00 
    1df6:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    1dfd:	00 
    1dfe:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    1e05:	00 
    1e06:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    1e0d:	00 
    1e0e:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    1e15:	00 00 00 
    1e18:	e9 45 01 00 00       	jmpq   1f62 <main+0x28d>
    1e1d:	b8 00 04 00 00       	mov    $0x400,%eax
    1e22:	48 98                	cltq   
    1e24:	48 89 c7             	mov    %rax,%rdi
    1e27:	e8 7b 02 00 00       	callq  20a7 <xrandomunsigned64>
    1e2c:	48 89 c2             	mov    %rax,%rdx
    1e2f:	48 89 d0             	mov    %rdx,%rax
    1e32:	48 c1 e0 0c          	shl    $0xc,%rax
    1e36:	48 01 d0             	add    %rdx,%rax
    1e39:	48 c1 e0 04          	shl    $0x4,%rax
    1e3d:	48 8d 15 fc 31 00 00 	lea    0x31fc(%rip),%rdx        # 5040 <examplestr>
    1e44:	48 01 d0             	add    %rdx,%rax
    1e47:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    1e4e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    1e55:	48 89 c7             	mov    %rax,%rdi
    1e58:	e8 85 f7 ff ff       	callq  15e2 <xstrlen>
    1e5d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    1e64:	e8 7b 03 00 00       	callq  21e4 <xtimeget>
    1e69:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    1e6d:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    1e71:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    1e78:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    1e7f:	48 89 c7             	mov    %rax,%rdi
    1e82:	ff d2                	callq  *%rdx
    1e84:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    1e8b:	e8 54 03 00 00       	callq  21e4 <xtimeget>
    1e90:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    1e94:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    1e98:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    1e9c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    1ea0:	48 89 d6             	mov    %rdx,%rsi
    1ea3:	48 89 c7             	mov    %rax,%rdi
    1ea6:	e8 d4 03 00 00       	callq  227f <xtimediff>
    1eab:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    1eaf:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    1eb3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    1eb7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    1ebb:	48 89 d6             	mov    %rdx,%rsi
    1ebe:	48 89 c7             	mov    %rax,%rdi
    1ec1:	e8 28 04 00 00       	callq  22ee <xtimecmp>
    1ec6:	48 85 c0             	test   %rax,%rax
    1ec9:	79 10                	jns    1edb <main+0x206>
    1ecb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1ecf:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    1ed3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    1ed7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    1edb:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    1edf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    1ee3:	48 89 d6             	mov    %rdx,%rsi
    1ee6:	48 89 c7             	mov    %rax,%rdi
    1ee9:	e8 00 04 00 00       	callq  22ee <xtimecmp>
    1eee:	48 85 c0             	test   %rax,%rax
    1ef1:	7e 10                	jle    1f03 <main+0x22e>
    1ef3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1ef7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    1efb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1eff:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    1f03:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    1f07:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    1f0b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    1f12:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1f16:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
    1f1c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    1f23:	49 89 f9             	mov    %rdi,%r9
    1f26:	49 89 f0             	mov    %rsi,%r8
    1f29:	48 89 c6             	mov    %rax,%rsi
    1f2c:	48 8d 3d dd 10 00 00 	lea    0x10dd(%rip),%rdi        # 3010 <experimentalcount+0x4>
    1f33:	b8 00 00 00 00       	mov    $0x0,%eax
    1f38:	e8 43 f3 ff ff       	callq  1280 <printf@plt>
    1f3d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1f41:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1f45:	48 01 d0             	add    %rdx,%rax
    1f48:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1f4c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1f50:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1f54:	48 01 d0             	add    %rdx,%rax
    1f57:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1f5b:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
    1f62:	b8 00 00 01 00       	mov    $0x10000,%eax
    1f67:	39 85 5c ff ff ff    	cmp    %eax,-0xa4(%rbp)
    1f6d:	0f 8c aa fe ff ff    	jl     1e1d <main+0x148>
    1f73:	48 8d 3d ad 10 00 00 	lea    0x10ad(%rip),%rdi        # 3027 <experimentalcount+0x1b>
    1f7a:	e8 c1 f2 ff ff       	callq  1240 <puts@plt>
    1f7f:	b8 00 00 01 00       	mov    $0x10000,%eax
    1f84:	48 63 d0             	movslq %eax,%rdx
    1f87:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1f8b:	48 89 d6             	mov    %rdx,%rsi
    1f8e:	48 89 c7             	mov    %rax,%rdi
    1f91:	e8 a5 03 00 00       	callq  233b <xtimeavg>
    1f96:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1f9a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1f9e:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    1fa2:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    1fa6:	be 00 00 01 00       	mov    $0x10000,%esi
    1fab:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    1fb2:	49 89 c8             	mov    %rcx,%r8
    1fb5:	48 89 d1             	mov    %rdx,%rcx
    1fb8:	89 f2                	mov    %esi,%edx
    1fba:	48 89 c6             	mov    %rax,%rsi
    1fbd:	48 8d 3d 65 10 00 00 	lea    0x1065(%rip),%rdi        # 3029 <experimentalcount+0x1d>
    1fc4:	b8 00 00 00 00       	mov    $0x0,%eax
    1fc9:	e8 b2 f2 ff ff       	callq  1280 <printf@plt>
    1fce:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1fd2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    1fd6:	be 00 00 01 00       	mov    $0x10000,%esi
    1fdb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    1fe2:	49 89 c8             	mov    %rcx,%r8
    1fe5:	48 89 d1             	mov    %rdx,%rcx
    1fe8:	89 f2                	mov    %esi,%edx
    1fea:	48 89 c6             	mov    %rax,%rsi
    1fed:	48 8d 3d 4a 10 00 00 	lea    0x104a(%rip),%rdi        # 303e <experimentalcount+0x32>
    1ff4:	b8 00 00 00 00       	mov    $0x0,%eax
    1ff9:	e8 82 f2 ff ff       	callq  1280 <printf@plt>
    1ffe:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2002:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2006:	be 00 00 01 00       	mov    $0x10000,%esi
    200b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2012:	49 89 c8             	mov    %rcx,%r8
    2015:	48 89 d1             	mov    %rdx,%rcx
    2018:	89 f2                	mov    %esi,%edx
    201a:	48 89 c6             	mov    %rax,%rsi
    201d:	48 8d 3d 2f 10 00 00 	lea    0x102f(%rip),%rdi        # 3053 <experimentalcount+0x47>
    2024:	b8 00 00 00 00       	mov    $0x0,%eax
    2029:	e8 52 f2 ff ff       	callq  1280 <printf@plt>
    202e:	48 8b 05 a3 2f 00 00 	mov    0x2fa3(%rip),%rax        # 4fd8 <strlen@GLIBC_2.2.5>
    2035:	48 89 c6             	mov    %rax,%rsi
    2038:	48 8d 3d 30 10 00 00 	lea    0x1030(%rip),%rdi        # 306f <experimentalcount+0x63>
    203f:	b8 00 00 00 00       	mov    $0x0,%eax
    2044:	e8 33 f8 ff ff       	callq  187c <experiment>
    2049:	48 8d 35 28 f5 ff ff 	lea    -0xad8(%rip),%rsi        # 1578 <xstringlen_optimize_long>
    2050:	48 8d 3d 18 10 00 00 	lea    0x1018(%rip),%rdi        # 306f <experimentalcount+0x63>
    2057:	b8 00 00 00 00       	mov    $0x0,%eax
    205c:	e8 1b f8 ff ff       	callq  187c <experiment>
    2061:	b8 00 00 00 00       	mov    $0x0,%eax
    2066:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    206a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2071:	00 00 
    2073:	74 05                	je     207a <main+0x3a5>
    2075:	e8 f6 f1 ff ff       	callq  1270 <__stack_chk_fail@plt>
    207a:	c9                   	leaveq 
    207b:	c3                   	retq   

000000000000207c <xrandominit>:
    207c:	f3 0f 1e fa          	endbr64 
    2080:	55                   	push   %rbp
    2081:	48 89 e5             	mov    %rsp,%rbp
    2084:	bf 00 00 00 00       	mov    $0x0,%edi
    2089:	e8 72 f2 ff ff       	callq  1300 <time@plt>
    208e:	89 c7                	mov    %eax,%edi
    2090:	e8 8b f1 ff ff       	callq  1220 <srandom@plt>
    2095:	90                   	nop
    2096:	5d                   	pop    %rbp
    2097:	c3                   	retq   

0000000000002098 <xrandomget>:
    2098:	f3 0f 1e fa          	endbr64 
    209c:	55                   	push   %rbp
    209d:	48 89 e5             	mov    %rsp,%rbp
    20a0:	e8 6b f2 ff ff       	callq  1310 <random@plt>
    20a5:	5d                   	pop    %rbp
    20a6:	c3                   	retq   

00000000000020a7 <xrandomunsigned64>:
    20a7:	f3 0f 1e fa          	endbr64 
    20ab:	55                   	push   %rbp
    20ac:	48 89 e5             	mov    %rsp,%rbp
    20af:	48 83 ec 20          	sub    $0x20,%rsp
    20b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    20b7:	e8 54 f2 ff ff       	callq  1310 <random@plt>
    20bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    20c0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    20c5:	74 12                	je     20d9 <xrandomunsigned64+0x32>
    20c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20cb:	ba 00 00 00 00       	mov    $0x0,%edx
    20d0:	48 f7 75 e8          	divq   -0x18(%rbp)
    20d4:	48 89 d0             	mov    %rdx,%rax
    20d7:	eb 04                	jmp    20dd <xrandomunsigned64+0x36>
    20d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20dd:	c9                   	leaveq 
    20de:	c3                   	retq   

00000000000020df <xrandominteger64>:
    20df:	f3 0f 1e fa          	endbr64 
    20e3:	55                   	push   %rbp
    20e4:	48 89 e5             	mov    %rsp,%rbp
    20e7:	53                   	push   %rbx
    20e8:	48 83 ec 28          	sub    $0x28,%rsp
    20ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    20f0:	e8 1b f2 ff ff       	callq  1310 <random@plt>
    20f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    20f9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    20fe:	74 15                	je     2115 <xrandominteger64+0x36>
    2100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2104:	ba 00 00 00 00       	mov    $0x0,%edx
    2109:	48 f7 75 d8          	divq   -0x28(%rbp)
    210d:	48 89 d0             	mov    %rdx,%rax
    2110:	48 89 c3             	mov    %rax,%rbx
    2113:	eb 04                	jmp    2119 <xrandominteger64+0x3a>
    2115:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    2119:	e8 f2 f1 ff ff       	callq  1310 <random@plt>
    211e:	83 e0 01             	and    $0x1,%eax
    2121:	48 85 c0             	test   %rax,%rax
    2124:	74 09                	je     212f <xrandominteger64+0x50>
    2126:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    212d:	eb 05                	jmp    2134 <xrandominteger64+0x55>
    212f:	b8 01 00 00 00       	mov    $0x1,%eax
    2134:	48 0f af c3          	imul   %rbx,%rax
    2138:	48 83 c4 28          	add    $0x28,%rsp
    213c:	5b                   	pop    %rbx
    213d:	5d                   	pop    %rbp
    213e:	c3                   	retq   

000000000000213f <xunsigned64from_integer32>:
    213f:	f3 0f 1e fa          	endbr64 
    2143:	55                   	push   %rbp
    2144:	48 89 e5             	mov    %rsp,%rbp
    2147:	48 83 ec 30          	sub    $0x30,%rsp
    214b:	89 7d dc             	mov    %edi,-0x24(%rbp)
    214e:	89 75 d8             	mov    %esi,-0x28(%rbp)
    2151:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2158:	00 00 
    215a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    215e:	31 c0                	xor    %eax,%eax
    2160:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    2167:	00 
    2168:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    216c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2170:	8b 55 dc             	mov    -0x24(%rbp),%edx
    2173:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2177:	89 10                	mov    %edx,(%rax)
    2179:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    217d:	48 8d 50 04          	lea    0x4(%rax),%rdx
    2181:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2184:	89 02                	mov    %eax,(%rdx)
    2186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    218a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    218e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2195:	00 00 
    2197:	74 05                	je     219e <xunsigned64from_integer32+0x5f>
    2199:	e8 d2 f0 ff ff       	callq  1270 <__stack_chk_fail@plt>
    219e:	c9                   	leaveq 
    219f:	c3                   	retq   

00000000000021a0 <xuint64decimalstringlen>:
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	55                   	push   %rbp
    21a5:	48 89 e5             	mov    %rsp,%rbp
    21a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    21ac:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
    21b3:	00 
    21b4:	eb 05                	jmp    21bb <xuint64decimalstringlen+0x1b>
    21b6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    21bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    21bf:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
    21c6:	cc cc cc 
    21c9:	48 f7 e2             	mul    %rdx
    21cc:	48 89 d0             	mov    %rdx,%rax
    21cf:	48 c1 e8 03          	shr    $0x3,%rax
    21d3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    21d7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    21dc:	75 d8                	jne    21b6 <xuint64decimalstringlen+0x16>
    21de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    21e2:	5d                   	pop    %rbp
    21e3:	c3                   	retq   

00000000000021e4 <xtimeget>:
    21e4:	f3 0f 1e fa          	endbr64 
    21e8:	55                   	push   %rbp
    21e9:	48 89 e5             	mov    %rsp,%rbp
    21ec:	48 83 ec 20          	sub    $0x20,%rsp
    21f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    21f7:	00 00 
    21f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    21fd:	31 c0                	xor    %eax,%eax
    21ff:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    2206:	00 
    2207:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    220e:	00 
    220f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2213:	48 89 c6             	mov    %rax,%rsi
    2216:	bf 00 00 00 00       	mov    $0x0,%edi
    221b:	e8 30 f0 ff ff       	callq  1250 <clock_gettime@plt>
    2220:	85 c0                	test   %eax,%eax
    2222:	74 3d                	je     2261 <xtimeget+0x7d>
    2224:	e8 e7 ef ff ff       	callq  1210 <__errno_location@plt>
    2229:	8b 00                	mov    (%rax),%eax
    222b:	41 89 c1             	mov    %eax,%r9d
    222e:	4c 8d 05 5b 0e 00 00 	lea    0xe5b(%rip),%r8        # 3090 <experimentalcount+0x84>
    2235:	48 8d 0d 84 0e 00 00 	lea    0xe84(%rip),%rcx        # 30c0 <__func__.3181>
    223c:	ba 0f 00 00 00       	mov    $0xf,%edx
    2241:	48 8d 35 68 0e 00 00 	lea    0xe68(%rip),%rsi        # 30b0 <experimentalcount+0xa4>
    2248:	bf 00 01 00 00       	mov    $0x100,%edi
    224d:	b8 00 00 00 00       	mov    $0x0,%eax
    2252:	e8 46 05 00 00       	callq  279d <xlogout>
    2257:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    225c:	e8 3f f1 ff ff       	callq  13a0 <exit@plt>
    2261:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2265:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2269:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    226d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2274:	00 00 
    2276:	74 05                	je     227d <xtimeget+0x99>
    2278:	e8 f3 ef ff ff       	callq  1270 <__stack_chk_fail@plt>
    227d:	c9                   	leaveq 
    227e:	c3                   	retq   

000000000000227f <xtimediff>:
    227f:	f3 0f 1e fa          	endbr64 
    2283:	55                   	push   %rbp
    2284:	48 89 e5             	mov    %rsp,%rbp
    2287:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    228b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    228f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2293:	48 8b 10             	mov    (%rax),%rdx
    2296:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    229a:	48 8b 00             	mov    (%rax),%rax
    229d:	48 29 c2             	sub    %rax,%rdx
    22a0:	48 89 d0             	mov    %rdx,%rax
    22a3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    22ab:	48 8b 50 08          	mov    0x8(%rax),%rdx
    22af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    22b3:	48 8b 40 08          	mov    0x8(%rax),%rax
    22b7:	48 29 c2             	sub    %rax,%rdx
    22ba:	48 89 d0             	mov    %rdx,%rax
    22bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    22c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    22c5:	48 85 c0             	test   %rax,%rax
    22c8:	79 1a                	jns    22e4 <xtimediff+0x65>
    22ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22ce:	48 83 e8 01          	sub    $0x1,%rax
    22d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    22da:	48 05 00 ca 9a 3b    	add    $0x3b9aca00,%rax
    22e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    22e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    22ec:	5d                   	pop    %rbp
    22ed:	c3                   	retq   

00000000000022ee <xtimecmp>:
    22ee:	f3 0f 1e fa          	endbr64 
    22f2:	55                   	push   %rbp
    22f3:	48 89 e5             	mov    %rsp,%rbp
    22f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    22fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    22fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2302:	48 8b 10             	mov    (%rax),%rdx
    2305:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2309:	48 8b 00             	mov    (%rax),%rax
    230c:	48 29 c2             	sub    %rax,%rdx
    230f:	48 89 d0             	mov    %rdx,%rax
    2312:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2316:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    231b:	75 18                	jne    2335 <xtimecmp+0x47>
    231d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2321:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2325:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2329:	48 8b 40 08          	mov    0x8(%rax),%rax
    232d:	48 29 c2             	sub    %rax,%rdx
    2330:	48 89 d0             	mov    %rdx,%rax
    2333:	eb 04                	jmp    2339 <xtimecmp+0x4b>
    2335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2339:	5d                   	pop    %rbp
    233a:	c3                   	retq   

000000000000233b <xtimeavg>:
    233b:	f3 0f 1e fa          	endbr64 
    233f:	55                   	push   %rbp
    2340:	48 89 e5             	mov    %rsp,%rbp
    2343:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2347:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    234b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    234f:	48 8b 00             	mov    (%rax),%rax
    2352:	ba 00 00 00 00       	mov    $0x0,%edx
    2357:	48 f7 75 e0          	divq   -0x20(%rbp)
    235b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    235f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2363:	48 8b 40 08          	mov    0x8(%rax),%rax
    2367:	ba 00 00 00 00       	mov    $0x0,%edx
    236c:	48 f7 75 e0          	divq   -0x20(%rbp)
    2370:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2378:	48 3d 00 ca 9a 3b    	cmp    $0x3b9aca00,%rax
    237e:	7e 63                	jle    23e3 <xtimeavg+0xa8>
    2380:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2384:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2388:	48 ba b3 94 d6 26 e8 	movabs $0x112e0be826d694b3,%rdx
    238f:	0b 2e 11 
    2392:	48 89 c8             	mov    %rcx,%rax
    2395:	48 f7 ea             	imul   %rdx
    2398:	48 c1 fa 1a          	sar    $0x1a,%rdx
    239c:	48 89 c8             	mov    %rcx,%rax
    239f:	48 c1 f8 3f          	sar    $0x3f,%rax
    23a3:	48 29 c2             	sub    %rax,%rdx
    23a6:	48 89 d0             	mov    %rdx,%rax
    23a9:	48 01 f0             	add    %rsi,%rax
    23ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    23b0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    23b4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    23b8:	48 ba b3 94 d6 26 e8 	movabs $0x112e0be826d694b3,%rdx
    23bf:	0b 2e 11 
    23c2:	48 89 c8             	mov    %rcx,%rax
    23c5:	48 f7 ea             	imul   %rdx
    23c8:	48 89 d0             	mov    %rdx,%rax
    23cb:	48 c1 f8 1a          	sar    $0x1a,%rax
    23cf:	48 c1 f9 3f          	sar    $0x3f,%rcx
    23d3:	48 89 ca             	mov    %rcx,%rdx
    23d6:	48 29 c2             	sub    %rax,%rdx
    23d9:	48 89 d0             	mov    %rdx,%rax
    23dc:	48 01 f0             	add    %rsi,%rax
    23df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    23e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    23e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    23eb:	5d                   	pop    %rbp
    23ec:	c3                   	retq   

00000000000023ed <xlogtypeprintstr>:
    23ed:	55                   	push   %rbp
    23ee:	48 89 e5             	mov    %rsp,%rbp
    23f1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    23f4:	81 7d fc 00 10 00 00 	cmpl   $0x1000,-0x4(%rbp)
    23fb:	0f 84 41 01 00 00    	je     2542 <xlogtypeprintstr+0x155>
    2401:	81 7d fc 00 10 00 00 	cmpl   $0x1000,-0x4(%rbp)
    2408:	0f 87 3d 01 00 00    	ja     254b <xlogtypeprintstr+0x15e>
    240e:	81 7d fc 00 08 00 00 	cmpl   $0x800,-0x4(%rbp)
    2415:	0f 84 1e 01 00 00    	je     2539 <xlogtypeprintstr+0x14c>
    241b:	81 7d fc 00 08 00 00 	cmpl   $0x800,-0x4(%rbp)
    2422:	0f 87 23 01 00 00    	ja     254b <xlogtypeprintstr+0x15e>
    2428:	81 7d fc 00 04 00 00 	cmpl   $0x400,-0x4(%rbp)
    242f:	0f 84 fb 00 00 00    	je     2530 <xlogtypeprintstr+0x143>
    2435:	81 7d fc 00 04 00 00 	cmpl   $0x400,-0x4(%rbp)
    243c:	0f 87 09 01 00 00    	ja     254b <xlogtypeprintstr+0x15e>
    2442:	81 7d fc 00 02 00 00 	cmpl   $0x200,-0x4(%rbp)
    2449:	0f 84 d8 00 00 00    	je     2527 <xlogtypeprintstr+0x13a>
    244f:	81 7d fc 00 02 00 00 	cmpl   $0x200,-0x4(%rbp)
    2456:	0f 87 ef 00 00 00    	ja     254b <xlogtypeprintstr+0x15e>
    245c:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
    2463:	0f 84 b5 00 00 00    	je     251e <xlogtypeprintstr+0x131>
    2469:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
    2470:	0f 87 d5 00 00 00    	ja     254b <xlogtypeprintstr+0x15e>
    2476:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%rbp)
    247d:	0f 84 92 00 00 00    	je     2515 <xlogtypeprintstr+0x128>
    2483:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%rbp)
    248a:	0f 87 bb 00 00 00    	ja     254b <xlogtypeprintstr+0x15e>
    2490:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
    2494:	77 38                	ja     24ce <xlogtypeprintstr+0xe1>
    2496:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    249a:	0f 84 ab 00 00 00    	je     254b <xlogtypeprintstr+0x15e>
    24a0:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
    24a4:	0f 87 a1 00 00 00    	ja     254b <xlogtypeprintstr+0x15e>
    24aa:	8b 45 fc             	mov    -0x4(%rbp),%eax
    24ad:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    24b4:	00 
    24b5:	48 8d 05 04 0d 00 00 	lea    0xd04(%rip),%rax        # 31c0 <__func__.3181+0x100>
    24bc:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    24bf:	48 98                	cltq   
    24c1:	48 8d 15 f8 0c 00 00 	lea    0xcf8(%rip),%rdx        # 31c0 <__func__.3181+0x100>
    24c8:	48 01 d0             	add    %rdx,%rax
    24cb:	3e ff e0             	notrack jmpq *%rax
    24ce:	83 7d fc 40          	cmpl   $0x40,-0x4(%rbp)
    24d2:	74 38                	je     250c <xlogtypeprintstr+0x11f>
    24d4:	eb 75                	jmp    254b <xlogtypeprintstr+0x15e>
    24d6:	48 8d 05 f3 0b 00 00 	lea    0xbf3(%rip),%rax        # 30d0 <__func__.3181+0x10>
    24dd:	eb 73                	jmp    2552 <xlogtypeprintstr+0x165>
    24df:	48 8d 05 fb 0b 00 00 	lea    0xbfb(%rip),%rax        # 30e1 <__func__.3181+0x21>
    24e6:	eb 6a                	jmp    2552 <xlogtypeprintstr+0x165>
    24e8:	48 8d 05 03 0c 00 00 	lea    0xc03(%rip),%rax        # 30f2 <__func__.3181+0x32>
    24ef:	eb 61                	jmp    2552 <xlogtypeprintstr+0x165>
    24f1:	48 8d 05 0b 0c 00 00 	lea    0xc0b(%rip),%rax        # 3103 <__func__.3181+0x43>
    24f8:	eb 58                	jmp    2552 <xlogtypeprintstr+0x165>
    24fa:	48 8d 05 13 0c 00 00 	lea    0xc13(%rip),%rax        # 3114 <__func__.3181+0x54>
    2501:	eb 4f                	jmp    2552 <xlogtypeprintstr+0x165>
    2503:	48 8d 05 1b 0c 00 00 	lea    0xc1b(%rip),%rax        # 3125 <__func__.3181+0x65>
    250a:	eb 46                	jmp    2552 <xlogtypeprintstr+0x165>
    250c:	48 8d 05 23 0c 00 00 	lea    0xc23(%rip),%rax        # 3136 <__func__.3181+0x76>
    2513:	eb 3d                	jmp    2552 <xlogtypeprintstr+0x165>
    2515:	48 8d 05 2b 0c 00 00 	lea    0xc2b(%rip),%rax        # 3147 <__func__.3181+0x87>
    251c:	eb 34                	jmp    2552 <xlogtypeprintstr+0x165>
    251e:	48 8d 05 33 0c 00 00 	lea    0xc33(%rip),%rax        # 3158 <__func__.3181+0x98>
    2525:	eb 2b                	jmp    2552 <xlogtypeprintstr+0x165>
    2527:	48 8d 05 3b 0c 00 00 	lea    0xc3b(%rip),%rax        # 3169 <__func__.3181+0xa9>
    252e:	eb 22                	jmp    2552 <xlogtypeprintstr+0x165>
    2530:	48 8d 05 43 0c 00 00 	lea    0xc43(%rip),%rax        # 317a <__func__.3181+0xba>
    2537:	eb 19                	jmp    2552 <xlogtypeprintstr+0x165>
    2539:	48 8d 05 4b 0c 00 00 	lea    0xc4b(%rip),%rax        # 318b <__func__.3181+0xcb>
    2540:	eb 10                	jmp    2552 <xlogtypeprintstr+0x165>
    2542:	48 8d 05 53 0c 00 00 	lea    0xc53(%rip),%rax        # 319c <__func__.3181+0xdc>
    2549:	eb 07                	jmp    2552 <xlogtypeprintstr+0x165>
    254b:	48 8d 05 5b 0c 00 00 	lea    0xc5b(%rip),%rax        # 31ad <__func__.3181+0xed>
    2552:	5d                   	pop    %rbp
    2553:	c3                   	retq   

0000000000002554 <xloginit>:
    2554:	f3 0f 1e fa          	endbr64 
    2558:	55                   	push   %rbp
    2559:	48 89 e5             	mov    %rsp,%rbp
    255c:	48 83 ec 20          	sub    $0x20,%rsp
    2560:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2564:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    2567:	89 55 e0             	mov    %edx,-0x20(%rbp)
    256a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    256f:	74 6f                	je     25e0 <xloginit+0x8c>
    2571:	48 8b 05 d0 6a 00 04 	mov    0x4006ad0(%rip),%rax        # 4009048 <__path>
    2578:	48 85 c0             	test   %rax,%rax
    257b:	74 0f                	je     258c <xloginit+0x38>
    257d:	48 8b 05 c4 6a 00 04 	mov    0x4006ac4(%rip),%rax        # 4009048 <__path>
    2584:	48 89 c7             	mov    %rax,%rdi
    2587:	e8 74 ec ff ff       	callq  1200 <free@plt>
    258c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2590:	48 89 c7             	mov    %rax,%rdi
    2593:	e8 48 ec ff ff       	callq  11e0 <strlen@plt>
    2598:	48 83 c0 01          	add    $0x1,%rax
    259c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    25a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25a4:	48 89 c7             	mov    %rax,%rdi
    25a7:	e8 84 ed ff ff       	callq  1330 <malloc@plt>
    25ac:	48 89 05 95 6a 00 04 	mov    %rax,0x4006a95(%rip)        # 4009048 <__path>
    25b3:	48 8b 05 8e 6a 00 04 	mov    0x4006a8e(%rip),%rax        # 4009048 <__path>
    25ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    25be:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    25c2:	48 89 ce             	mov    %rcx,%rsi
    25c5:	48 89 c7             	mov    %rax,%rdi
    25c8:	e8 23 ed ff ff       	callq  12f0 <memcpy@plt>
    25cd:	48 8b 15 74 6a 00 04 	mov    0x4006a74(%rip),%rdx        # 4009048 <__path>
    25d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25d8:	48 01 d0             	add    %rdx,%rax
    25db:	c6 00 00             	movb   $0x0,(%rax)
    25de:	eb 26                	jmp    2606 <xloginit+0xb2>
    25e0:	48 8b 05 61 6a 00 04 	mov    0x4006a61(%rip),%rax        # 4009048 <__path>
    25e7:	48 85 c0             	test   %rax,%rax
    25ea:	74 1a                	je     2606 <xloginit+0xb2>
    25ec:	48 8b 05 55 6a 00 04 	mov    0x4006a55(%rip),%rax        # 4009048 <__path>
    25f3:	48 89 c7             	mov    %rax,%rdi
    25f6:	e8 05 ec ff ff       	callq  1200 <free@plt>
    25fb:	48 c7 05 42 6a 00 04 	movq   $0x0,0x4006a42(%rip)        # 4009048 <__path>
    2602:	00 00 00 00 
    2606:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2609:	89 05 41 6a 00 04    	mov    %eax,0x4006a41(%rip)        # 4009050 <__mask>
    260f:	8b 45 e0             	mov    -0x20(%rbp),%eax
    2612:	89 05 28 6a 00 04    	mov    %eax,0x4006a28(%rip)        # 4009040 <__console>
    2618:	90                   	nop
    2619:	c9                   	leaveq 
    261a:	c3                   	retq   

000000000000261b <xlogconsole_set>:
    261b:	f3 0f 1e fa          	endbr64 
    261f:	55                   	push   %rbp
    2620:	48 89 e5             	mov    %rsp,%rbp
    2623:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2626:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2629:	89 05 11 6a 00 04    	mov    %eax,0x4006a11(%rip)        # 4009040 <__console>
    262f:	90                   	nop
    2630:	5d                   	pop    %rbp
    2631:	c3                   	retq   

0000000000002632 <xlogpath_set>:
    2632:	f3 0f 1e fa          	endbr64 
    2636:	55                   	push   %rbp
    2637:	48 89 e5             	mov    %rsp,%rbp
    263a:	48 83 ec 10          	sub    $0x10,%rsp
    263e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2642:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2647:	74 5d                	je     26a6 <xlogpath_set+0x74>
    2649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    264d:	0f b6 00             	movzbl (%rax),%eax
    2650:	3c 2f                	cmp    $0x2f,%al
    2652:	75 78                	jne    26cc <xlogpath_set+0x9a>
    2654:	48 8b 05 ed 69 00 04 	mov    0x40069ed(%rip),%rax        # 4009048 <__path>
    265b:	48 85 c0             	test   %rax,%rax
    265e:	74 0f                	je     266f <xlogpath_set+0x3d>
    2660:	48 8b 05 e1 69 00 04 	mov    0x40069e1(%rip),%rax        # 4009048 <__path>
    2667:	48 89 c7             	mov    %rax,%rdi
    266a:	e8 91 eb ff ff       	callq  1200 <free@plt>
    266f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2673:	48 89 c7             	mov    %rax,%rdi
    2676:	e8 65 eb ff ff       	callq  11e0 <strlen@plt>
    267b:	48 83 c0 01          	add    $0x1,%rax
    267f:	48 89 c7             	mov    %rax,%rdi
    2682:	e8 a9 ec ff ff       	callq  1330 <malloc@plt>
    2687:	48 89 05 ba 69 00 04 	mov    %rax,0x40069ba(%rip)        # 4009048 <__path>
    268e:	48 8b 05 b3 69 00 04 	mov    0x40069b3(%rip),%rax        # 4009048 <__path>
    2695:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2699:	48 89 d6             	mov    %rdx,%rsi
    269c:	48 89 c7             	mov    %rax,%rdi
    269f:	e8 8c eb ff ff       	callq  1230 <strcpy@plt>
    26a4:	eb 26                	jmp    26cc <xlogpath_set+0x9a>
    26a6:	48 8b 05 9b 69 00 04 	mov    0x400699b(%rip),%rax        # 4009048 <__path>
    26ad:	48 85 c0             	test   %rax,%rax
    26b0:	74 1a                	je     26cc <xlogpath_set+0x9a>
    26b2:	48 8b 05 8f 69 00 04 	mov    0x400698f(%rip),%rax        # 4009048 <__path>
    26b9:	48 89 c7             	mov    %rax,%rdi
    26bc:	e8 3f eb ff ff       	callq  1200 <free@plt>
    26c1:	48 c7 05 7c 69 00 04 	movq   $0x0,0x400697c(%rip)        # 4009048 <__path>
    26c8:	00 00 00 00 
    26cc:	90                   	nop
    26cd:	c9                   	leaveq 
    26ce:	c3                   	retq   

00000000000026cf <xlogmask_get>:
    26cf:	f3 0f 1e fa          	endbr64 
    26d3:	55                   	push   %rbp
    26d4:	48 89 e5             	mov    %rsp,%rbp
    26d7:	8b 05 73 69 00 04    	mov    0x4006973(%rip),%eax        # 4009050 <__mask>
    26dd:	5d                   	pop    %rbp
    26de:	c3                   	retq   

00000000000026df <xlogmask_set>:
    26df:	f3 0f 1e fa          	endbr64 
    26e3:	55                   	push   %rbp
    26e4:	48 89 e5             	mov    %rsp,%rbp
    26e7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    26ea:	8b 45 fc             	mov    -0x4(%rbp),%eax
    26ed:	89 05 5d 69 00 04    	mov    %eax,0x400695d(%rip)        # 4009050 <__mask>
    26f3:	90                   	nop
    26f4:	5d                   	pop    %rbp
    26f5:	c3                   	retq   

00000000000026f6 <xlogterm>:
    26f6:	f3 0f 1e fa          	endbr64 
    26fa:	55                   	push   %rbp
    26fb:	48 89 e5             	mov    %rsp,%rbp
    26fe:	48 83 ec 10          	sub    $0x10,%rsp
    2702:	48 8b 05 4f 69 00 04 	mov    0x400694f(%rip),%rax        # 4009058 <key>
    2709:	48 85 c0             	test   %rax,%rax
    270c:	74 66                	je     2774 <xlogterm+0x7e>
    270e:	48 8b 05 43 69 00 04 	mov    0x4006943(%rip),%rax        # 4009058 <key>
    2715:	8b 00                	mov    (%rax),%eax
    2717:	89 c7                	mov    %eax,%edi
    2719:	e8 02 ec ff ff       	callq  1320 <pthread_getspecific@plt>
    271e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2722:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2727:	74 21                	je     274a <xlogterm+0x54>
    2729:	48 8b 05 28 69 00 04 	mov    0x4006928(%rip),%rax        # 4009058 <key>
    2730:	8b 00                	mov    (%rax),%eax
    2732:	be 00 00 00 00       	mov    $0x0,%esi
    2737:	89 c7                	mov    %eax,%edi
    2739:	e8 52 eb ff ff       	callq  1290 <pthread_setspecific@plt>
    273e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2742:	48 89 c7             	mov    %rax,%rdi
    2745:	e8 5c 05 00 00       	callq  2ca6 <xlogthreaddatarem>
    274a:	48 8b 05 07 69 00 04 	mov    0x4006907(%rip),%rax        # 4009058 <key>
    2751:	8b 00                	mov    (%rax),%eax
    2753:	89 c7                	mov    %eax,%edi
    2755:	e8 36 ec ff ff       	callq  1390 <pthread_key_delete@plt>
    275a:	48 8b 05 f7 68 00 04 	mov    0x40068f7(%rip),%rax        # 4009058 <key>
    2761:	48 89 c7             	mov    %rax,%rdi
    2764:	e8 97 ea ff ff       	callq  1200 <free@plt>
    2769:	48 c7 05 e4 68 00 04 	movq   $0x0,0x40068e4(%rip)        # 4009058 <key>
    2770:	00 00 00 00 
    2774:	48 8b 05 cd 68 00 04 	mov    0x40068cd(%rip),%rax        # 4009048 <__path>
    277b:	48 85 c0             	test   %rax,%rax
    277e:	74 1a                	je     279a <xlogterm+0xa4>
    2780:	48 8b 05 c1 68 00 04 	mov    0x40068c1(%rip),%rax        # 4009048 <__path>
    2787:	48 89 c7             	mov    %rax,%rdi
    278a:	e8 71 ea ff ff       	callq  1200 <free@plt>
    278f:	48 c7 05 ae 68 00 04 	movq   $0x0,0x40068ae(%rip)        # 4009048 <__path>
    2796:	00 00 00 00 
    279a:	90                   	nop
    279b:	c9                   	leaveq 
    279c:	c3                   	retq   

000000000000279d <xlogout>:
    279d:	f3 0f 1e fa          	endbr64 
    27a1:	55                   	push   %rbp
    27a2:	48 89 e5             	mov    %rsp,%rbp
    27a5:	41 54                	push   %r12
    27a7:	53                   	push   %rbx
    27a8:	48 81 ec a0 05 00 00 	sub    $0x5a0,%rsp
    27af:	89 bd 6c fa ff ff    	mov    %edi,-0x594(%rbp)
    27b5:	48 89 b5 60 fa ff ff 	mov    %rsi,-0x5a0(%rbp)
    27bc:	89 95 68 fa ff ff    	mov    %edx,-0x598(%rbp)
    27c2:	48 89 8d 58 fa ff ff 	mov    %rcx,-0x5a8(%rbp)
    27c9:	4c 89 85 50 fa ff ff 	mov    %r8,-0x5b0(%rbp)
    27d0:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
    27d7:	84 c0                	test   %al,%al
    27d9:	74 23                	je     27fe <xlogout+0x61>
    27db:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    27e2:	0f 29 4d 80          	movaps %xmm1,-0x80(%rbp)
    27e6:	0f 29 55 90          	movaps %xmm2,-0x70(%rbp)
    27ea:	0f 29 5d a0          	movaps %xmm3,-0x60(%rbp)
    27ee:	0f 29 65 b0          	movaps %xmm4,-0x50(%rbp)
    27f2:	0f 29 6d c0          	movaps %xmm5,-0x40(%rbp)
    27f6:	0f 29 75 d0          	movaps %xmm6,-0x30(%rbp)
    27fa:	0f 29 7d e0          	movaps %xmm7,-0x20(%rbp)
    27fe:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2805:	00 00 
    2807:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    280e:	31 c0                	xor    %eax,%eax
    2810:	8b 05 3a 68 00 04    	mov    0x400683a(%rip),%eax        # 4009050 <__mask>
    2816:	23 85 6c fa ff ff    	and    -0x594(%rbp),%eax
    281c:	85 c0                	test   %eax,%eax
    281e:	0f 84 61 04 00 00    	je     2c85 <xlogout+0x4e8>
    2824:	48 c7 85 90 fa ff ff 	movq   $0x0,-0x570(%rbp)
    282b:	00 00 00 00 
    282f:	48 c7 85 98 fa ff ff 	movq   $0x0,-0x568(%rbp)
    2836:	00 00 00 00 
    283a:	48 c7 85 a0 fa ff ff 	movq   $0x0,-0x560(%rbp)
    2841:	00 00 00 00 
    2845:	48 c7 85 a8 fa ff ff 	movq   $0x0,-0x558(%rbp)
    284c:	00 00 00 00 
    2850:	48 c7 85 b0 fa ff ff 	movq   $0x0,-0x550(%rbp)
    2857:	00 00 00 00 
    285b:	48 c7 85 b8 fa ff ff 	movq   $0x0,-0x548(%rbp)
    2862:	00 00 00 00 
    2866:	48 c7 85 c0 fa ff ff 	movq   $0x0,-0x540(%rbp)
    286d:	00 00 00 00 
    2871:	48 c7 85 c8 fa ff ff 	movq   $0x0,-0x538(%rbp)
    2878:	00 00 00 00 
    287c:	48 c7 85 d0 fa ff ff 	movq   $0x0,-0x530(%rbp)
    2883:	00 00 00 00 
    2887:	e8 d4 ea ff ff       	callq  1360 <pthread_self@plt>
    288c:	48 89 85 78 fa ff ff 	mov    %rax,-0x588(%rbp)
    2893:	48 8d 85 90 fa ff ff 	lea    -0x570(%rbp),%rax
    289a:	48 89 c6             	mov    %rax,%rsi
    289d:	bf 00 00 00 00       	mov    $0x0,%edi
    28a2:	e8 a9 e9 ff ff       	callq  1250 <clock_gettime@plt>
    28a7:	48 8d 95 a0 fa ff ff 	lea    -0x560(%rbp),%rdx
    28ae:	48 8d 85 90 fa ff ff 	lea    -0x570(%rbp),%rax
    28b5:	48 89 d6             	mov    %rdx,%rsi
    28b8:	48 89 c7             	mov    %rax,%rdi
    28bb:	e8 f0 e9 ff ff       	callq  12b0 <gmtime_r@plt>
    28c0:	48 8b 05 91 67 00 04 	mov    0x4006791(%rip),%rax        # 4009058 <key>
    28c7:	48 85 c0             	test   %rax,%rax
    28ca:	0f 85 aa 00 00 00    	jne    297a <xlogout+0x1dd>
    28d0:	be 01 00 00 00       	mov    $0x1,%esi
    28d5:	bf 04 00 00 00       	mov    $0x4,%edi
    28da:	e8 f1 e9 ff ff       	callq  12d0 <calloc@plt>
    28df:	48 89 05 72 67 00 04 	mov    %rax,0x4006772(%rip)        # 4009058 <key>
    28e6:	48 8b 05 6b 67 00 04 	mov    0x400676b(%rip),%rax        # 4009058 <key>
    28ed:	48 8d 35 b2 03 00 00 	lea    0x3b2(%rip),%rsi        # 2ca6 <xlogthreaddatarem>
    28f4:	48 89 c7             	mov    %rax,%rdi
    28f7:	e8 54 ea ff ff       	callq  1350 <pthread_key_create@plt>
    28fc:	85 c0                	test   %eax,%eax
    28fe:	75 60                	jne    2960 <xlogout+0x1c3>
    2900:	be 01 00 00 00       	mov    $0x1,%esi
    2905:	bf 10 00 00 00       	mov    $0x10,%edi
    290a:	e8 c1 e9 ff ff       	callq  12d0 <calloc@plt>
    290f:	48 89 85 80 fa ff ff 	mov    %rax,-0x580(%rbp)
    2916:	48 8b 05 3b 67 00 04 	mov    0x400673b(%rip),%rax        # 4009058 <key>
    291d:	8b 00                	mov    (%rax),%eax
    291f:	48 8b 95 80 fa ff ff 	mov    -0x580(%rbp),%rdx
    2926:	48 89 d6             	mov    %rdx,%rsi
    2929:	89 c7                	mov    %eax,%edi
    292b:	e8 60 e9 ff ff       	callq  1290 <pthread_setspecific@plt>
    2930:	85 c0                	test   %eax,%eax
    2932:	74 46                	je     297a <xlogout+0x1dd>
    2934:	48 8b 05 1d 67 00 04 	mov    0x400671d(%rip),%rax        # 4009058 <key>
    293b:	8b 00                	mov    (%rax),%eax
    293d:	89 c7                	mov    %eax,%edi
    293f:	e8 4c ea ff ff       	callq  1390 <pthread_key_delete@plt>
    2944:	48 8b 05 0d 67 00 04 	mov    0x400670d(%rip),%rax        # 4009058 <key>
    294b:	48 89 c7             	mov    %rax,%rdi
    294e:	e8 ad e8 ff ff       	callq  1200 <free@plt>
    2953:	48 c7 05 fa 66 00 04 	movq   $0x0,0x40066fa(%rip)        # 4009058 <key>
    295a:	00 00 00 00 
    295e:	eb 1a                	jmp    297a <xlogout+0x1dd>
    2960:	48 8b 05 f1 66 00 04 	mov    0x40066f1(%rip),%rax        # 4009058 <key>
    2967:	48 89 c7             	mov    %rax,%rdi
    296a:	e8 91 e8 ff ff       	callq  1200 <free@plt>
    296f:	48 c7 05 de 66 00 04 	movq   $0x0,0x40066de(%rip)        # 4009058 <key>
    2976:	00 00 00 00 
    297a:	48 8b 05 d7 66 00 04 	mov    0x40066d7(%rip),%rax        # 4009058 <key>
    2981:	48 85 c0             	test   %rax,%rax
    2984:	0f 84 fb 02 00 00    	je     2c85 <xlogout+0x4e8>
    298a:	48 8b 05 c7 66 00 04 	mov    0x40066c7(%rip),%rax        # 4009058 <key>
    2991:	8b 00                	mov    (%rax),%eax
    2993:	89 c7                	mov    %eax,%edi
    2995:	e8 86 e9 ff ff       	callq  1320 <pthread_getspecific@plt>
    299a:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
    29a1:	48 83 bd 88 fa ff ff 	cmpq   $0x0,-0x578(%rbp)
    29a8:	00 
    29a9:	0f 84 d6 02 00 00    	je     2c85 <xlogout+0x4e8>
    29af:	8b 85 b4 fa ff ff    	mov    -0x54c(%rbp),%eax
    29b5:	05 6c 07 00 00       	add    $0x76c,%eax
    29ba:	69 d0 10 27 00 00    	imul   $0x2710,%eax,%edx
    29c0:	8b 85 b0 fa ff ff    	mov    -0x550(%rbp),%eax
    29c6:	83 c0 01             	add    $0x1,%eax
    29c9:	6b c0 64             	imul   $0x64,%eax,%eax
    29cc:	01 c2                	add    %eax,%edx
    29ce:	8b 85 ac fa ff ff    	mov    -0x554(%rbp),%eax
    29d4:	01 d0                	add    %edx,%eax
    29d6:	89 85 74 fa ff ff    	mov    %eax,-0x58c(%rbp)
    29dc:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    29e3:	48 8b 00             	mov    (%rax),%rax
    29e6:	48 85 c0             	test   %rax,%rax
    29e9:	74 16                	je     2a01 <xlogout+0x264>
    29eb:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    29f2:	8b 40 08             	mov    0x8(%rax),%eax
    29f5:	39 85 74 fa ff ff    	cmp    %eax,-0x58c(%rbp)
    29fb:	0f 84 f0 00 00 00    	je     2af1 <xlogout+0x354>
    2a01:	8b 05 39 66 00 04    	mov    0x4006639(%rip),%eax        # 4009040 <__console>
    2a07:	85 c0                	test   %eax,%eax
    2a09:	0f 85 d1 00 00 00    	jne    2ae0 <xlogout+0x343>
    2a0f:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2a16:	48 8b 00             	mov    (%rax),%rax
    2a19:	48 85 c0             	test   %rax,%rax
    2a1c:	74 28                	je     2a46 <xlogout+0x2a9>
    2a1e:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2a25:	48 8b 10             	mov    (%rax),%rdx
    2a28:	48 8b 05 f1 25 00 00 	mov    0x25f1(%rip),%rax        # 5020 <stdout@@GLIBC_2.2.5>
    2a2f:	48 39 c2             	cmp    %rax,%rdx
    2a32:	74 12                	je     2a46 <xlogout+0x2a9>
    2a34:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2a3b:	48 8b 00             	mov    (%rax),%rax
    2a3e:	48 89 c7             	mov    %rax,%rdi
    2a41:	e8 1a e8 ff ff       	callq  1260 <fclose@plt>
    2a46:	8b 95 ac fa ff ff    	mov    -0x554(%rbp),%edx
    2a4c:	8b 85 b0 fa ff ff    	mov    -0x550(%rbp),%eax
    2a52:	8d 70 01             	lea    0x1(%rax),%esi
    2a55:	8b 85 b4 fa ff ff    	mov    -0x54c(%rbp),%eax
    2a5b:	8d 88 6c 07 00 00    	lea    0x76c(%rax),%ecx
    2a61:	48 8b 05 e0 65 00 04 	mov    0x40065e0(%rip),%rax        # 4009048 <__path>
    2a68:	48 85 c0             	test   %rax,%rax
    2a6b:	74 09                	je     2a76 <xlogout+0x2d9>
    2a6d:	48 8b 05 d4 65 00 04 	mov    0x40065d4(%rip),%rax        # 4009048 <__path>
    2a74:	eb 07                	jmp    2a7d <xlogout+0x2e0>
    2a76:	48 8d 05 c7 07 00 00 	lea    0x7c7(%rip),%rax        # 3244 <__func__.3181+0x184>
    2a7d:	48 8d bd f0 fa ff ff 	lea    -0x510(%rbp),%rdi
    2a84:	ff b5 78 fa ff ff    	pushq  -0x588(%rbp)
    2a8a:	52                   	push   %rdx
    2a8b:	41 89 f1             	mov    %esi,%r9d
    2a8e:	41 89 c8             	mov    %ecx,%r8d
    2a91:	48 89 c1             	mov    %rax,%rcx
    2a94:	48 8d 15 aa 07 00 00 	lea    0x7aa(%rip),%rdx        # 3245 <__func__.3181+0x185>
    2a9b:	be 40 04 00 00       	mov    $0x440,%esi
    2aa0:	b8 00 00 00 00       	mov    $0x0,%eax
    2aa5:	e8 f6 e7 ff ff       	callq  12a0 <snprintf@plt>
    2aaa:	48 83 c4 10          	add    $0x10,%rsp
    2aae:	48 8d 85 f0 fa ff ff 	lea    -0x510(%rbp),%rax
    2ab5:	48 8d 35 a3 07 00 00 	lea    0x7a3(%rip),%rsi        # 325f <__func__.3181+0x19f>
    2abc:	48 89 c7             	mov    %rax,%rdi
    2abf:	e8 ac e8 ff ff       	callq  1370 <fopen@plt>
    2ac4:	48 8b 95 88 fa ff ff 	mov    -0x578(%rbp),%rdx
    2acb:	48 89 02             	mov    %rax,(%rdx)
    2ace:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2ad5:	8b 95 74 fa ff ff    	mov    -0x58c(%rbp),%edx
    2adb:	89 50 08             	mov    %edx,0x8(%rax)
    2ade:	eb 11                	jmp    2af1 <xlogout+0x354>
    2ae0:	48 8b 15 39 25 00 00 	mov    0x2539(%rip),%rdx        # 5020 <stdout@@GLIBC_2.2.5>
    2ae7:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2aee:	48 89 10             	mov    %rdx,(%rax)
    2af1:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2af8:	48 8b 00             	mov    (%rax),%rax
    2afb:	48 85 c0             	test   %rax,%rax
    2afe:	0f 84 81 01 00 00    	je     2c85 <xlogout+0x4e8>
    2b04:	81 bd 6c fa ff ff 00 	cmpl   $0x1000,-0x594(%rbp)
    2b0b:	10 00 00 
    2b0e:	75 17                	jne    2b27 <xlogout+0x38a>
    2b10:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2b17:	8b 40 0c             	mov    0xc(%rax),%eax
    2b1a:	8d 50 ff             	lea    -0x1(%rax),%edx
    2b1d:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2b24:	89 50 0c             	mov    %edx,0xc(%rax)
    2b27:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2b2e:	8b 40 0c             	mov    0xc(%rax),%eax
    2b31:	85 c0                	test   %eax,%eax
    2b33:	79 0e                	jns    2b43 <xlogout+0x3a6>
    2b35:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2b3c:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    2b43:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2b4a:	8b 58 0c             	mov    0xc(%rax),%ebx
    2b4d:	8b 85 6c fa ff ff    	mov    -0x594(%rbp),%eax
    2b53:	89 c7                	mov    %eax,%edi
    2b55:	e8 93 f8 ff ff       	callq  23ed <xlogtypeprintstr>
    2b5a:	48 89 c2             	mov    %rax,%rdx
    2b5d:	4c 8b 8d 98 fa ff ff 	mov    -0x568(%rbp),%r9
    2b64:	44 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%r8d
    2b6b:	8b bd a4 fa ff ff    	mov    -0x55c(%rbp),%edi
    2b71:	44 8b a5 a8 fa ff ff 	mov    -0x558(%rbp),%r12d
    2b78:	44 8b 9d ac fa ff ff 	mov    -0x554(%rbp),%r11d
    2b7f:	8b 85 b0 fa ff ff    	mov    -0x550(%rbp),%eax
    2b85:	8d 48 01             	lea    0x1(%rax),%ecx
    2b88:	8b 85 b4 fa ff ff    	mov    -0x54c(%rbp),%eax
    2b8e:	8d b0 6c 07 00 00    	lea    0x76c(%rax),%esi
    2b94:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2b9b:	48 8b 00             	mov    (%rax),%rax
    2b9e:	ff b5 78 fa ff ff    	pushq  -0x588(%rbp)
    2ba4:	ff b5 58 fa ff ff    	pushq  -0x5a8(%rbp)
    2baa:	44 8b 95 68 fa ff ff 	mov    -0x598(%rbp),%r10d
    2bb1:	41 52                	push   %r10
    2bb3:	ff b5 60 fa ff ff    	pushq  -0x5a0(%rbp)
    2bb9:	4c 8d 15 84 06 00 00 	lea    0x684(%rip),%r10        # 3244 <__func__.3181+0x184>
    2bc0:	41 52                	push   %r10
    2bc2:	53                   	push   %rbx
    2bc3:	52                   	push   %rdx
    2bc4:	41 51                	push   %r9
    2bc6:	41 50                	push   %r8
    2bc8:	57                   	push   %rdi
    2bc9:	45 89 e1             	mov    %r12d,%r9d
    2bcc:	45 89 d8             	mov    %r11d,%r8d
    2bcf:	89 f2                	mov    %esi,%edx
    2bd1:	48 8d 35 90 06 00 00 	lea    0x690(%rip),%rsi        # 3268 <__func__.3181+0x1a8>
    2bd8:	48 89 c7             	mov    %rax,%rdi
    2bdb:	b8 00 00 00 00       	mov    $0x0,%eax
    2be0:	e8 fb e6 ff ff       	callq  12e0 <fprintf@plt>
    2be5:	48 83 c4 50          	add    $0x50,%rsp
    2be9:	81 bd 6c fa ff ff 00 	cmpl   $0x800,-0x594(%rbp)
    2bf0:	08 00 00 
    2bf3:	75 17                	jne    2c0c <xlogout+0x46f>
    2bf5:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2bfc:	8b 40 0c             	mov    0xc(%rax),%eax
    2bff:	8d 50 01             	lea    0x1(%rax),%edx
    2c02:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2c09:	89 50 0c             	mov    %edx,0xc(%rax)
    2c0c:	c7 85 d8 fa ff ff 28 	movl   $0x28,-0x528(%rbp)
    2c13:	00 00 00 
    2c16:	c7 85 dc fa ff ff 30 	movl   $0x30,-0x524(%rbp)
    2c1d:	00 00 00 
    2c20:	48 8d 45 10          	lea    0x10(%rbp),%rax
    2c24:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
    2c2b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    2c32:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
    2c39:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2c40:	48 8b 00             	mov    (%rax),%rax
    2c43:	48 8d 95 d8 fa ff ff 	lea    -0x528(%rbp),%rdx
    2c4a:	48 8b 8d 50 fa ff ff 	mov    -0x5b0(%rbp),%rcx
    2c51:	48 89 ce             	mov    %rcx,%rsi
    2c54:	48 89 c7             	mov    %rax,%rdi
    2c57:	e8 24 e7 ff ff       	callq  1380 <vfprintf@plt>
    2c5c:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2c63:	48 8b 00             	mov    (%rax),%rax
    2c66:	48 89 c6             	mov    %rax,%rsi
    2c69:	bf 0a 00 00 00       	mov    $0xa,%edi
    2c6e:	e8 4d e6 ff ff       	callq  12c0 <fputc@plt>
    2c73:	48 8b 85 88 fa ff ff 	mov    -0x578(%rbp),%rax
    2c7a:	48 8b 00             	mov    (%rax),%rax
    2c7d:	48 89 c7             	mov    %rax,%rdi
    2c80:	e8 bb e6 ff ff       	callq  1340 <fflush@plt>
    2c85:	90                   	nop
    2c86:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    2c8d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    2c94:	00 00 
    2c96:	74 05                	je     2c9d <xlogout+0x500>
    2c98:	e8 d3 e5 ff ff       	callq  1270 <__stack_chk_fail@plt>
    2c9d:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
    2ca1:	5b                   	pop    %rbx
    2ca2:	41 5c                	pop    %r12
    2ca4:	5d                   	pop    %rbp
    2ca5:	c3                   	retq   

0000000000002ca6 <xlogthreaddatarem>:
    2ca6:	f3 0f 1e fa          	endbr64 
    2caa:	55                   	push   %rbp
    2cab:	48 89 e5             	mov    %rsp,%rbp
    2cae:	48 83 ec 20          	sub    $0x20,%rsp
    2cb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2cb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2cba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2cbe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2cc3:	74 27                	je     2cec <xlogthreaddatarem+0x46>
    2cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cc9:	48 8b 00             	mov    (%rax),%rax
    2ccc:	48 85 c0             	test   %rax,%rax
    2ccf:	74 0f                	je     2ce0 <xlogthreaddatarem+0x3a>
    2cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cd5:	48 8b 00             	mov    (%rax),%rax
    2cd8:	48 89 c7             	mov    %rax,%rdi
    2cdb:	e8 80 e5 ff ff       	callq  1260 <fclose@plt>
    2ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ce4:	48 89 c7             	mov    %rax,%rdi
    2ce7:	e8 14 e5 ff ff       	callq  1200 <free@plt>
    2cec:	90                   	nop
    2ced:	c9                   	leaveq 
    2cee:	c3                   	retq   
    2cef:	90                   	nop

0000000000002cf0 <__libc_csu_init>:
    2cf0:	f3 0f 1e fa          	endbr64 
    2cf4:	41 57                	push   %r15
    2cf6:	4c 8d 3d d3 1f 00 00 	lea    0x1fd3(%rip),%r15        # 4cd0 <__frame_dummy_init_array_entry>
    2cfd:	41 56                	push   %r14
    2cff:	49 89 d6             	mov    %rdx,%r14
    2d02:	41 55                	push   %r13
    2d04:	49 89 f5             	mov    %rsi,%r13
    2d07:	41 54                	push   %r12
    2d09:	41 89 fc             	mov    %edi,%r12d
    2d0c:	55                   	push   %rbp
    2d0d:	48 8d 2d c4 1f 00 00 	lea    0x1fc4(%rip),%rbp        # 4cd8 <__do_global_dtors_aux_fini_array_entry>
    2d14:	53                   	push   %rbx
    2d15:	4c 29 fd             	sub    %r15,%rbp
    2d18:	48 83 ec 08          	sub    $0x8,%rsp
    2d1c:	e8 df e2 ff ff       	callq  1000 <_init>
    2d21:	48 c1 fd 03          	sar    $0x3,%rbp
    2d25:	74 1f                	je     2d46 <__libc_csu_init+0x56>
    2d27:	31 db                	xor    %ebx,%ebx
    2d29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2d30:	4c 89 f2             	mov    %r14,%rdx
    2d33:	4c 89 ee             	mov    %r13,%rsi
    2d36:	44 89 e7             	mov    %r12d,%edi
    2d39:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    2d3d:	48 83 c3 01          	add    $0x1,%rbx
    2d41:	48 39 dd             	cmp    %rbx,%rbp
    2d44:	75 ea                	jne    2d30 <__libc_csu_init+0x40>
    2d46:	48 83 c4 08          	add    $0x8,%rsp
    2d4a:	5b                   	pop    %rbx
    2d4b:	5d                   	pop    %rbp
    2d4c:	41 5c                	pop    %r12
    2d4e:	41 5d                	pop    %r13
    2d50:	41 5e                	pop    %r14
    2d52:	41 5f                	pop    %r15
    2d54:	c3                   	retq   
    2d55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    2d5c:	00 00 00 00 

0000000000002d60 <__libc_csu_fini>:
    2d60:	f3 0f 1e fa          	endbr64 
    2d64:	c3                   	retq   

Disassembly of section .fini:

0000000000002d68 <_fini>:
    2d68:	f3 0f 1e fa          	endbr64 
    2d6c:	48 83 ec 08          	sub    $0x8,%rsp
    2d70:	48 83 c4 08          	add    $0x8,%rsp
    2d74:	c3                   	retq   
